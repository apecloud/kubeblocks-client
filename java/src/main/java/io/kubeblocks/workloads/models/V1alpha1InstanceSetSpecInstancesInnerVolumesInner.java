/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.25.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kubeblocks.workloads.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.kubeblocks.workloads.models.V1alpha1InstanceSetSpecInstancesInnerVolumesInnerAwsElasticBlockStore;
import io.kubeblocks.workloads.models.V1alpha1InstanceSetSpecInstancesInnerVolumesInnerAzureDisk;
import io.kubeblocks.workloads.models.V1alpha1InstanceSetSpecInstancesInnerVolumesInnerAzureFile;
import io.kubeblocks.workloads.models.V1alpha1InstanceSetSpecInstancesInnerVolumesInnerCephfs;
import io.kubeblocks.workloads.models.V1alpha1InstanceSetSpecInstancesInnerVolumesInnerCinder;
import io.kubeblocks.workloads.models.V1alpha1InstanceSetSpecInstancesInnerVolumesInnerConfigMap;
import io.kubeblocks.workloads.models.V1alpha1InstanceSetSpecInstancesInnerVolumesInnerCsi;
import io.kubeblocks.workloads.models.V1alpha1InstanceSetSpecInstancesInnerVolumesInnerDownwardAPI;
import io.kubeblocks.workloads.models.V1alpha1InstanceSetSpecInstancesInnerVolumesInnerEmptyDir;
import io.kubeblocks.workloads.models.V1alpha1InstanceSetSpecInstancesInnerVolumesInnerEphemeral;
import io.kubeblocks.workloads.models.V1alpha1InstanceSetSpecInstancesInnerVolumesInnerFc;
import io.kubeblocks.workloads.models.V1alpha1InstanceSetSpecInstancesInnerVolumesInnerFlexVolume;
import io.kubeblocks.workloads.models.V1alpha1InstanceSetSpecInstancesInnerVolumesInnerFlocker;
import io.kubeblocks.workloads.models.V1alpha1InstanceSetSpecInstancesInnerVolumesInnerGcePersistentDisk;
import io.kubeblocks.workloads.models.V1alpha1InstanceSetSpecInstancesInnerVolumesInnerGitRepo;
import io.kubeblocks.workloads.models.V1alpha1InstanceSetSpecInstancesInnerVolumesInnerGlusterfs;
import io.kubeblocks.workloads.models.V1alpha1InstanceSetSpecInstancesInnerVolumesInnerHostPath;
import io.kubeblocks.workloads.models.V1alpha1InstanceSetSpecInstancesInnerVolumesInnerIscsi;
import io.kubeblocks.workloads.models.V1alpha1InstanceSetSpecInstancesInnerVolumesInnerNfs;
import io.kubeblocks.workloads.models.V1alpha1InstanceSetSpecInstancesInnerVolumesInnerPersistentVolumeClaim;
import io.kubeblocks.workloads.models.V1alpha1InstanceSetSpecInstancesInnerVolumesInnerPhotonPersistentDisk;
import io.kubeblocks.workloads.models.V1alpha1InstanceSetSpecInstancesInnerVolumesInnerPortworxVolume;
import io.kubeblocks.workloads.models.V1alpha1InstanceSetSpecInstancesInnerVolumesInnerProjected;
import io.kubeblocks.workloads.models.V1alpha1InstanceSetSpecInstancesInnerVolumesInnerQuobyte;
import io.kubeblocks.workloads.models.V1alpha1InstanceSetSpecInstancesInnerVolumesInnerRbd;
import io.kubeblocks.workloads.models.V1alpha1InstanceSetSpecInstancesInnerVolumesInnerScaleIO;
import io.kubeblocks.workloads.models.V1alpha1InstanceSetSpecInstancesInnerVolumesInnerSecret;
import io.kubeblocks.workloads.models.V1alpha1InstanceSetSpecInstancesInnerVolumesInnerStorageos;
import io.kubeblocks.workloads.models.V1alpha1InstanceSetSpecInstancesInnerVolumesInnerVsphereVolume;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.kubernetes.client.openapi.JSON;

/**
 * Volume represents a named volume in a pod that may be accessed by any container in the pod.
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-05T14:03:17.809844Z[Etc/UTC]")
public class V1alpha1InstanceSetSpecInstancesInnerVolumesInner {
  public static final String SERIALIZED_NAME_AWS_ELASTIC_BLOCK_STORE = "awsElasticBlockStore";
  @SerializedName(SERIALIZED_NAME_AWS_ELASTIC_BLOCK_STORE)
  private V1alpha1InstanceSetSpecInstancesInnerVolumesInnerAwsElasticBlockStore awsElasticBlockStore;

  public static final String SERIALIZED_NAME_AZURE_DISK = "azureDisk";
  @SerializedName(SERIALIZED_NAME_AZURE_DISK)
  private V1alpha1InstanceSetSpecInstancesInnerVolumesInnerAzureDisk azureDisk;

  public static final String SERIALIZED_NAME_AZURE_FILE = "azureFile";
  @SerializedName(SERIALIZED_NAME_AZURE_FILE)
  private V1alpha1InstanceSetSpecInstancesInnerVolumesInnerAzureFile azureFile;

  public static final String SERIALIZED_NAME_CEPHFS = "cephfs";
  @SerializedName(SERIALIZED_NAME_CEPHFS)
  private V1alpha1InstanceSetSpecInstancesInnerVolumesInnerCephfs cephfs;

  public static final String SERIALIZED_NAME_CINDER = "cinder";
  @SerializedName(SERIALIZED_NAME_CINDER)
  private V1alpha1InstanceSetSpecInstancesInnerVolumesInnerCinder cinder;

  public static final String SERIALIZED_NAME_CONFIG_MAP = "configMap";
  @SerializedName(SERIALIZED_NAME_CONFIG_MAP)
  private V1alpha1InstanceSetSpecInstancesInnerVolumesInnerConfigMap configMap;

  public static final String SERIALIZED_NAME_CSI = "csi";
  @SerializedName(SERIALIZED_NAME_CSI)
  private V1alpha1InstanceSetSpecInstancesInnerVolumesInnerCsi csi;

  public static final String SERIALIZED_NAME_DOWNWARD_A_P_I = "downwardAPI";
  @SerializedName(SERIALIZED_NAME_DOWNWARD_A_P_I)
  private V1alpha1InstanceSetSpecInstancesInnerVolumesInnerDownwardAPI downwardAPI;

  public static final String SERIALIZED_NAME_EMPTY_DIR = "emptyDir";
  @SerializedName(SERIALIZED_NAME_EMPTY_DIR)
  private V1alpha1InstanceSetSpecInstancesInnerVolumesInnerEmptyDir emptyDir;

  public static final String SERIALIZED_NAME_EPHEMERAL = "ephemeral";
  @SerializedName(SERIALIZED_NAME_EPHEMERAL)
  private V1alpha1InstanceSetSpecInstancesInnerVolumesInnerEphemeral ephemeral;

  public static final String SERIALIZED_NAME_FC = "fc";
  @SerializedName(SERIALIZED_NAME_FC)
  private V1alpha1InstanceSetSpecInstancesInnerVolumesInnerFc fc;

  public static final String SERIALIZED_NAME_FLEX_VOLUME = "flexVolume";
  @SerializedName(SERIALIZED_NAME_FLEX_VOLUME)
  private V1alpha1InstanceSetSpecInstancesInnerVolumesInnerFlexVolume flexVolume;

  public static final String SERIALIZED_NAME_FLOCKER = "flocker";
  @SerializedName(SERIALIZED_NAME_FLOCKER)
  private V1alpha1InstanceSetSpecInstancesInnerVolumesInnerFlocker flocker;

  public static final String SERIALIZED_NAME_GCE_PERSISTENT_DISK = "gcePersistentDisk";
  @SerializedName(SERIALIZED_NAME_GCE_PERSISTENT_DISK)
  private V1alpha1InstanceSetSpecInstancesInnerVolumesInnerGcePersistentDisk gcePersistentDisk;

  public static final String SERIALIZED_NAME_GIT_REPO = "gitRepo";
  @SerializedName(SERIALIZED_NAME_GIT_REPO)
  private V1alpha1InstanceSetSpecInstancesInnerVolumesInnerGitRepo gitRepo;

  public static final String SERIALIZED_NAME_GLUSTERFS = "glusterfs";
  @SerializedName(SERIALIZED_NAME_GLUSTERFS)
  private V1alpha1InstanceSetSpecInstancesInnerVolumesInnerGlusterfs glusterfs;

  public static final String SERIALIZED_NAME_HOST_PATH = "hostPath";
  @SerializedName(SERIALIZED_NAME_HOST_PATH)
  private V1alpha1InstanceSetSpecInstancesInnerVolumesInnerHostPath hostPath;

  public static final String SERIALIZED_NAME_ISCSI = "iscsi";
  @SerializedName(SERIALIZED_NAME_ISCSI)
  private V1alpha1InstanceSetSpecInstancesInnerVolumesInnerIscsi iscsi;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NFS = "nfs";
  @SerializedName(SERIALIZED_NAME_NFS)
  private V1alpha1InstanceSetSpecInstancesInnerVolumesInnerNfs nfs;

  public static final String SERIALIZED_NAME_PERSISTENT_VOLUME_CLAIM = "persistentVolumeClaim";
  @SerializedName(SERIALIZED_NAME_PERSISTENT_VOLUME_CLAIM)
  private V1alpha1InstanceSetSpecInstancesInnerVolumesInnerPersistentVolumeClaim persistentVolumeClaim;

  public static final String SERIALIZED_NAME_PHOTON_PERSISTENT_DISK = "photonPersistentDisk";
  @SerializedName(SERIALIZED_NAME_PHOTON_PERSISTENT_DISK)
  private V1alpha1InstanceSetSpecInstancesInnerVolumesInnerPhotonPersistentDisk photonPersistentDisk;

  public static final String SERIALIZED_NAME_PORTWORX_VOLUME = "portworxVolume";
  @SerializedName(SERIALIZED_NAME_PORTWORX_VOLUME)
  private V1alpha1InstanceSetSpecInstancesInnerVolumesInnerPortworxVolume portworxVolume;

  public static final String SERIALIZED_NAME_PROJECTED = "projected";
  @SerializedName(SERIALIZED_NAME_PROJECTED)
  private V1alpha1InstanceSetSpecInstancesInnerVolumesInnerProjected projected;

  public static final String SERIALIZED_NAME_QUOBYTE = "quobyte";
  @SerializedName(SERIALIZED_NAME_QUOBYTE)
  private V1alpha1InstanceSetSpecInstancesInnerVolumesInnerQuobyte quobyte;

  public static final String SERIALIZED_NAME_RBD = "rbd";
  @SerializedName(SERIALIZED_NAME_RBD)
  private V1alpha1InstanceSetSpecInstancesInnerVolumesInnerRbd rbd;

  public static final String SERIALIZED_NAME_SCALE_I_O = "scaleIO";
  @SerializedName(SERIALIZED_NAME_SCALE_I_O)
  private V1alpha1InstanceSetSpecInstancesInnerVolumesInnerScaleIO scaleIO;

  public static final String SERIALIZED_NAME_SECRET = "secret";
  @SerializedName(SERIALIZED_NAME_SECRET)
  private V1alpha1InstanceSetSpecInstancesInnerVolumesInnerSecret secret;

  public static final String SERIALIZED_NAME_STORAGEOS = "storageos";
  @SerializedName(SERIALIZED_NAME_STORAGEOS)
  private V1alpha1InstanceSetSpecInstancesInnerVolumesInnerStorageos storageos;

  public static final String SERIALIZED_NAME_VSPHERE_VOLUME = "vsphereVolume";
  @SerializedName(SERIALIZED_NAME_VSPHERE_VOLUME)
  private V1alpha1InstanceSetSpecInstancesInnerVolumesInnerVsphereVolume vsphereVolume;

  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner() {
  }

  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner awsElasticBlockStore(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerAwsElasticBlockStore awsElasticBlockStore) {
    
    this.awsElasticBlockStore = awsElasticBlockStore;
    return this;
  }

   /**
   * Get awsElasticBlockStore
   * @return awsElasticBlockStore
  **/
  @jakarta.annotation.Nullable
  public V1alpha1InstanceSetSpecInstancesInnerVolumesInnerAwsElasticBlockStore getAwsElasticBlockStore() {
    return awsElasticBlockStore;
  }


  public void setAwsElasticBlockStore(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerAwsElasticBlockStore awsElasticBlockStore) {
    this.awsElasticBlockStore = awsElasticBlockStore;
  }


  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner azureDisk(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerAzureDisk azureDisk) {
    
    this.azureDisk = azureDisk;
    return this;
  }

   /**
   * Get azureDisk
   * @return azureDisk
  **/
  @jakarta.annotation.Nullable
  public V1alpha1InstanceSetSpecInstancesInnerVolumesInnerAzureDisk getAzureDisk() {
    return azureDisk;
  }


  public void setAzureDisk(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerAzureDisk azureDisk) {
    this.azureDisk = azureDisk;
  }


  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner azureFile(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerAzureFile azureFile) {
    
    this.azureFile = azureFile;
    return this;
  }

   /**
   * Get azureFile
   * @return azureFile
  **/
  @jakarta.annotation.Nullable
  public V1alpha1InstanceSetSpecInstancesInnerVolumesInnerAzureFile getAzureFile() {
    return azureFile;
  }


  public void setAzureFile(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerAzureFile azureFile) {
    this.azureFile = azureFile;
  }


  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner cephfs(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerCephfs cephfs) {
    
    this.cephfs = cephfs;
    return this;
  }

   /**
   * Get cephfs
   * @return cephfs
  **/
  @jakarta.annotation.Nullable
  public V1alpha1InstanceSetSpecInstancesInnerVolumesInnerCephfs getCephfs() {
    return cephfs;
  }


  public void setCephfs(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerCephfs cephfs) {
    this.cephfs = cephfs;
  }


  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner cinder(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerCinder cinder) {
    
    this.cinder = cinder;
    return this;
  }

   /**
   * Get cinder
   * @return cinder
  **/
  @jakarta.annotation.Nullable
  public V1alpha1InstanceSetSpecInstancesInnerVolumesInnerCinder getCinder() {
    return cinder;
  }


  public void setCinder(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerCinder cinder) {
    this.cinder = cinder;
  }


  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner configMap(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerConfigMap configMap) {
    
    this.configMap = configMap;
    return this;
  }

   /**
   * Get configMap
   * @return configMap
  **/
  @jakarta.annotation.Nullable
  public V1alpha1InstanceSetSpecInstancesInnerVolumesInnerConfigMap getConfigMap() {
    return configMap;
  }


  public void setConfigMap(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerConfigMap configMap) {
    this.configMap = configMap;
  }


  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner csi(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerCsi csi) {
    
    this.csi = csi;
    return this;
  }

   /**
   * Get csi
   * @return csi
  **/
  @jakarta.annotation.Nullable
  public V1alpha1InstanceSetSpecInstancesInnerVolumesInnerCsi getCsi() {
    return csi;
  }


  public void setCsi(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerCsi csi) {
    this.csi = csi;
  }


  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner downwardAPI(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerDownwardAPI downwardAPI) {
    
    this.downwardAPI = downwardAPI;
    return this;
  }

   /**
   * Get downwardAPI
   * @return downwardAPI
  **/
  @jakarta.annotation.Nullable
  public V1alpha1InstanceSetSpecInstancesInnerVolumesInnerDownwardAPI getDownwardAPI() {
    return downwardAPI;
  }


  public void setDownwardAPI(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerDownwardAPI downwardAPI) {
    this.downwardAPI = downwardAPI;
  }


  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner emptyDir(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerEmptyDir emptyDir) {
    
    this.emptyDir = emptyDir;
    return this;
  }

   /**
   * Get emptyDir
   * @return emptyDir
  **/
  @jakarta.annotation.Nullable
  public V1alpha1InstanceSetSpecInstancesInnerVolumesInnerEmptyDir getEmptyDir() {
    return emptyDir;
  }


  public void setEmptyDir(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerEmptyDir emptyDir) {
    this.emptyDir = emptyDir;
  }


  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner ephemeral(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerEphemeral ephemeral) {
    
    this.ephemeral = ephemeral;
    return this;
  }

   /**
   * Get ephemeral
   * @return ephemeral
  **/
  @jakarta.annotation.Nullable
  public V1alpha1InstanceSetSpecInstancesInnerVolumesInnerEphemeral getEphemeral() {
    return ephemeral;
  }


  public void setEphemeral(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerEphemeral ephemeral) {
    this.ephemeral = ephemeral;
  }


  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner fc(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerFc fc) {
    
    this.fc = fc;
    return this;
  }

   /**
   * Get fc
   * @return fc
  **/
  @jakarta.annotation.Nullable
  public V1alpha1InstanceSetSpecInstancesInnerVolumesInnerFc getFc() {
    return fc;
  }


  public void setFc(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerFc fc) {
    this.fc = fc;
  }


  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner flexVolume(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerFlexVolume flexVolume) {
    
    this.flexVolume = flexVolume;
    return this;
  }

   /**
   * Get flexVolume
   * @return flexVolume
  **/
  @jakarta.annotation.Nullable
  public V1alpha1InstanceSetSpecInstancesInnerVolumesInnerFlexVolume getFlexVolume() {
    return flexVolume;
  }


  public void setFlexVolume(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerFlexVolume flexVolume) {
    this.flexVolume = flexVolume;
  }


  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner flocker(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerFlocker flocker) {
    
    this.flocker = flocker;
    return this;
  }

   /**
   * Get flocker
   * @return flocker
  **/
  @jakarta.annotation.Nullable
  public V1alpha1InstanceSetSpecInstancesInnerVolumesInnerFlocker getFlocker() {
    return flocker;
  }


  public void setFlocker(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerFlocker flocker) {
    this.flocker = flocker;
  }


  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner gcePersistentDisk(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerGcePersistentDisk gcePersistentDisk) {
    
    this.gcePersistentDisk = gcePersistentDisk;
    return this;
  }

   /**
   * Get gcePersistentDisk
   * @return gcePersistentDisk
  **/
  @jakarta.annotation.Nullable
  public V1alpha1InstanceSetSpecInstancesInnerVolumesInnerGcePersistentDisk getGcePersistentDisk() {
    return gcePersistentDisk;
  }


  public void setGcePersistentDisk(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerGcePersistentDisk gcePersistentDisk) {
    this.gcePersistentDisk = gcePersistentDisk;
  }


  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner gitRepo(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerGitRepo gitRepo) {
    
    this.gitRepo = gitRepo;
    return this;
  }

   /**
   * Get gitRepo
   * @return gitRepo
  **/
  @jakarta.annotation.Nullable
  public V1alpha1InstanceSetSpecInstancesInnerVolumesInnerGitRepo getGitRepo() {
    return gitRepo;
  }


  public void setGitRepo(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerGitRepo gitRepo) {
    this.gitRepo = gitRepo;
  }


  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner glusterfs(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerGlusterfs glusterfs) {
    
    this.glusterfs = glusterfs;
    return this;
  }

   /**
   * Get glusterfs
   * @return glusterfs
  **/
  @jakarta.annotation.Nullable
  public V1alpha1InstanceSetSpecInstancesInnerVolumesInnerGlusterfs getGlusterfs() {
    return glusterfs;
  }


  public void setGlusterfs(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerGlusterfs glusterfs) {
    this.glusterfs = glusterfs;
  }


  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner hostPath(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerHostPath hostPath) {
    
    this.hostPath = hostPath;
    return this;
  }

   /**
   * Get hostPath
   * @return hostPath
  **/
  @jakarta.annotation.Nullable
  public V1alpha1InstanceSetSpecInstancesInnerVolumesInnerHostPath getHostPath() {
    return hostPath;
  }


  public void setHostPath(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerHostPath hostPath) {
    this.hostPath = hostPath;
  }


  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner iscsi(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerIscsi iscsi) {
    
    this.iscsi = iscsi;
    return this;
  }

   /**
   * Get iscsi
   * @return iscsi
  **/
  @jakarta.annotation.Nullable
  public V1alpha1InstanceSetSpecInstancesInnerVolumesInnerIscsi getIscsi() {
    return iscsi;
  }


  public void setIscsi(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerIscsi iscsi) {
    this.iscsi = iscsi;
  }


  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * name of the volume. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   * @return name
  **/
  @jakarta.annotation.Nonnull
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner nfs(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerNfs nfs) {
    
    this.nfs = nfs;
    return this;
  }

   /**
   * Get nfs
   * @return nfs
  **/
  @jakarta.annotation.Nullable
  public V1alpha1InstanceSetSpecInstancesInnerVolumesInnerNfs getNfs() {
    return nfs;
  }


  public void setNfs(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerNfs nfs) {
    this.nfs = nfs;
  }


  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner persistentVolumeClaim(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerPersistentVolumeClaim persistentVolumeClaim) {
    
    this.persistentVolumeClaim = persistentVolumeClaim;
    return this;
  }

   /**
   * Get persistentVolumeClaim
   * @return persistentVolumeClaim
  **/
  @jakarta.annotation.Nullable
  public V1alpha1InstanceSetSpecInstancesInnerVolumesInnerPersistentVolumeClaim getPersistentVolumeClaim() {
    return persistentVolumeClaim;
  }


  public void setPersistentVolumeClaim(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerPersistentVolumeClaim persistentVolumeClaim) {
    this.persistentVolumeClaim = persistentVolumeClaim;
  }


  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner photonPersistentDisk(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerPhotonPersistentDisk photonPersistentDisk) {
    
    this.photonPersistentDisk = photonPersistentDisk;
    return this;
  }

   /**
   * Get photonPersistentDisk
   * @return photonPersistentDisk
  **/
  @jakarta.annotation.Nullable
  public V1alpha1InstanceSetSpecInstancesInnerVolumesInnerPhotonPersistentDisk getPhotonPersistentDisk() {
    return photonPersistentDisk;
  }


  public void setPhotonPersistentDisk(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerPhotonPersistentDisk photonPersistentDisk) {
    this.photonPersistentDisk = photonPersistentDisk;
  }


  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner portworxVolume(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerPortworxVolume portworxVolume) {
    
    this.portworxVolume = portworxVolume;
    return this;
  }

   /**
   * Get portworxVolume
   * @return portworxVolume
  **/
  @jakarta.annotation.Nullable
  public V1alpha1InstanceSetSpecInstancesInnerVolumesInnerPortworxVolume getPortworxVolume() {
    return portworxVolume;
  }


  public void setPortworxVolume(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerPortworxVolume portworxVolume) {
    this.portworxVolume = portworxVolume;
  }


  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner projected(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerProjected projected) {
    
    this.projected = projected;
    return this;
  }

   /**
   * Get projected
   * @return projected
  **/
  @jakarta.annotation.Nullable
  public V1alpha1InstanceSetSpecInstancesInnerVolumesInnerProjected getProjected() {
    return projected;
  }


  public void setProjected(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerProjected projected) {
    this.projected = projected;
  }


  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner quobyte(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerQuobyte quobyte) {
    
    this.quobyte = quobyte;
    return this;
  }

   /**
   * Get quobyte
   * @return quobyte
  **/
  @jakarta.annotation.Nullable
  public V1alpha1InstanceSetSpecInstancesInnerVolumesInnerQuobyte getQuobyte() {
    return quobyte;
  }


  public void setQuobyte(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerQuobyte quobyte) {
    this.quobyte = quobyte;
  }


  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner rbd(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerRbd rbd) {
    
    this.rbd = rbd;
    return this;
  }

   /**
   * Get rbd
   * @return rbd
  **/
  @jakarta.annotation.Nullable
  public V1alpha1InstanceSetSpecInstancesInnerVolumesInnerRbd getRbd() {
    return rbd;
  }


  public void setRbd(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerRbd rbd) {
    this.rbd = rbd;
  }


  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner scaleIO(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerScaleIO scaleIO) {
    
    this.scaleIO = scaleIO;
    return this;
  }

   /**
   * Get scaleIO
   * @return scaleIO
  **/
  @jakarta.annotation.Nullable
  public V1alpha1InstanceSetSpecInstancesInnerVolumesInnerScaleIO getScaleIO() {
    return scaleIO;
  }


  public void setScaleIO(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerScaleIO scaleIO) {
    this.scaleIO = scaleIO;
  }


  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner secret(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerSecret secret) {
    
    this.secret = secret;
    return this;
  }

   /**
   * Get secret
   * @return secret
  **/
  @jakarta.annotation.Nullable
  public V1alpha1InstanceSetSpecInstancesInnerVolumesInnerSecret getSecret() {
    return secret;
  }


  public void setSecret(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerSecret secret) {
    this.secret = secret;
  }


  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner storageos(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerStorageos storageos) {
    
    this.storageos = storageos;
    return this;
  }

   /**
   * Get storageos
   * @return storageos
  **/
  @jakarta.annotation.Nullable
  public V1alpha1InstanceSetSpecInstancesInnerVolumesInnerStorageos getStorageos() {
    return storageos;
  }


  public void setStorageos(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerStorageos storageos) {
    this.storageos = storageos;
  }


  public V1alpha1InstanceSetSpecInstancesInnerVolumesInner vsphereVolume(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerVsphereVolume vsphereVolume) {
    
    this.vsphereVolume = vsphereVolume;
    return this;
  }

   /**
   * Get vsphereVolume
   * @return vsphereVolume
  **/
  @jakarta.annotation.Nullable
  public V1alpha1InstanceSetSpecInstancesInnerVolumesInnerVsphereVolume getVsphereVolume() {
    return vsphereVolume;
  }


  public void setVsphereVolume(V1alpha1InstanceSetSpecInstancesInnerVolumesInnerVsphereVolume vsphereVolume) {
    this.vsphereVolume = vsphereVolume;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1InstanceSetSpecInstancesInnerVolumesInner v1alpha1InstanceSetSpecInstancesInnerVolumesInner = (V1alpha1InstanceSetSpecInstancesInnerVolumesInner) o;
    return Objects.equals(this.awsElasticBlockStore, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.awsElasticBlockStore) &&
        Objects.equals(this.azureDisk, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.azureDisk) &&
        Objects.equals(this.azureFile, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.azureFile) &&
        Objects.equals(this.cephfs, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.cephfs) &&
        Objects.equals(this.cinder, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.cinder) &&
        Objects.equals(this.configMap, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.configMap) &&
        Objects.equals(this.csi, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.csi) &&
        Objects.equals(this.downwardAPI, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.downwardAPI) &&
        Objects.equals(this.emptyDir, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.emptyDir) &&
        Objects.equals(this.ephemeral, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.ephemeral) &&
        Objects.equals(this.fc, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.fc) &&
        Objects.equals(this.flexVolume, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.flexVolume) &&
        Objects.equals(this.flocker, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.flocker) &&
        Objects.equals(this.gcePersistentDisk, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.gcePersistentDisk) &&
        Objects.equals(this.gitRepo, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.gitRepo) &&
        Objects.equals(this.glusterfs, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.glusterfs) &&
        Objects.equals(this.hostPath, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.hostPath) &&
        Objects.equals(this.iscsi, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.iscsi) &&
        Objects.equals(this.name, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.name) &&
        Objects.equals(this.nfs, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.nfs) &&
        Objects.equals(this.persistentVolumeClaim, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.persistentVolumeClaim) &&
        Objects.equals(this.photonPersistentDisk, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.photonPersistentDisk) &&
        Objects.equals(this.portworxVolume, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.portworxVolume) &&
        Objects.equals(this.projected, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.projected) &&
        Objects.equals(this.quobyte, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.quobyte) &&
        Objects.equals(this.rbd, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.rbd) &&
        Objects.equals(this.scaleIO, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.scaleIO) &&
        Objects.equals(this.secret, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.secret) &&
        Objects.equals(this.storageos, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.storageos) &&
        Objects.equals(this.vsphereVolume, v1alpha1InstanceSetSpecInstancesInnerVolumesInner.vsphereVolume);
  }

  @Override
  public int hashCode() {
    return Objects.hash(awsElasticBlockStore, azureDisk, azureFile, cephfs, cinder, configMap, csi, downwardAPI, emptyDir, ephemeral, fc, flexVolume, flocker, gcePersistentDisk, gitRepo, glusterfs, hostPath, iscsi, name, nfs, persistentVolumeClaim, photonPersistentDisk, portworxVolume, projected, quobyte, rbd, scaleIO, secret, storageos, vsphereVolume);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1InstanceSetSpecInstancesInnerVolumesInner {\n");
    sb.append("    awsElasticBlockStore: ").append(toIndentedString(awsElasticBlockStore)).append("\n");
    sb.append("    azureDisk: ").append(toIndentedString(azureDisk)).append("\n");
    sb.append("    azureFile: ").append(toIndentedString(azureFile)).append("\n");
    sb.append("    cephfs: ").append(toIndentedString(cephfs)).append("\n");
    sb.append("    cinder: ").append(toIndentedString(cinder)).append("\n");
    sb.append("    configMap: ").append(toIndentedString(configMap)).append("\n");
    sb.append("    csi: ").append(toIndentedString(csi)).append("\n");
    sb.append("    downwardAPI: ").append(toIndentedString(downwardAPI)).append("\n");
    sb.append("    emptyDir: ").append(toIndentedString(emptyDir)).append("\n");
    sb.append("    ephemeral: ").append(toIndentedString(ephemeral)).append("\n");
    sb.append("    fc: ").append(toIndentedString(fc)).append("\n");
    sb.append("    flexVolume: ").append(toIndentedString(flexVolume)).append("\n");
    sb.append("    flocker: ").append(toIndentedString(flocker)).append("\n");
    sb.append("    gcePersistentDisk: ").append(toIndentedString(gcePersistentDisk)).append("\n");
    sb.append("    gitRepo: ").append(toIndentedString(gitRepo)).append("\n");
    sb.append("    glusterfs: ").append(toIndentedString(glusterfs)).append("\n");
    sb.append("    hostPath: ").append(toIndentedString(hostPath)).append("\n");
    sb.append("    iscsi: ").append(toIndentedString(iscsi)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nfs: ").append(toIndentedString(nfs)).append("\n");
    sb.append("    persistentVolumeClaim: ").append(toIndentedString(persistentVolumeClaim)).append("\n");
    sb.append("    photonPersistentDisk: ").append(toIndentedString(photonPersistentDisk)).append("\n");
    sb.append("    portworxVolume: ").append(toIndentedString(portworxVolume)).append("\n");
    sb.append("    projected: ").append(toIndentedString(projected)).append("\n");
    sb.append("    quobyte: ").append(toIndentedString(quobyte)).append("\n");
    sb.append("    rbd: ").append(toIndentedString(rbd)).append("\n");
    sb.append("    scaleIO: ").append(toIndentedString(scaleIO)).append("\n");
    sb.append("    secret: ").append(toIndentedString(secret)).append("\n");
    sb.append("    storageos: ").append(toIndentedString(storageos)).append("\n");
    sb.append("    vsphereVolume: ").append(toIndentedString(vsphereVolume)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("awsElasticBlockStore");
    openapiFields.add("azureDisk");
    openapiFields.add("azureFile");
    openapiFields.add("cephfs");
    openapiFields.add("cinder");
    openapiFields.add("configMap");
    openapiFields.add("csi");
    openapiFields.add("downwardAPI");
    openapiFields.add("emptyDir");
    openapiFields.add("ephemeral");
    openapiFields.add("fc");
    openapiFields.add("flexVolume");
    openapiFields.add("flocker");
    openapiFields.add("gcePersistentDisk");
    openapiFields.add("gitRepo");
    openapiFields.add("glusterfs");
    openapiFields.add("hostPath");
    openapiFields.add("iscsi");
    openapiFields.add("name");
    openapiFields.add("nfs");
    openapiFields.add("persistentVolumeClaim");
    openapiFields.add("photonPersistentDisk");
    openapiFields.add("portworxVolume");
    openapiFields.add("projected");
    openapiFields.add("quobyte");
    openapiFields.add("rbd");
    openapiFields.add("scaleIO");
    openapiFields.add("secret");
    openapiFields.add("storageos");
    openapiFields.add("vsphereVolume");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to V1alpha1InstanceSetSpecInstancesInnerVolumesInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!V1alpha1InstanceSetSpecInstancesInnerVolumesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in V1alpha1InstanceSetSpecInstancesInnerVolumesInner is not found in the empty JSON string", V1alpha1InstanceSetSpecInstancesInnerVolumesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!V1alpha1InstanceSetSpecInstancesInnerVolumesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `V1alpha1InstanceSetSpecInstancesInnerVolumesInner` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : V1alpha1InstanceSetSpecInstancesInnerVolumesInner.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // validate the optional field `awsElasticBlockStore`
      if (jsonObj.get("awsElasticBlockStore") != null && !jsonObj.get("awsElasticBlockStore").isJsonNull()) {
        V1alpha1InstanceSetSpecInstancesInnerVolumesInnerAwsElasticBlockStore.validateJsonObject(jsonObj.getAsJsonObject("awsElasticBlockStore"));
      }
      // validate the optional field `azureDisk`
      if (jsonObj.get("azureDisk") != null && !jsonObj.get("azureDisk").isJsonNull()) {
        V1alpha1InstanceSetSpecInstancesInnerVolumesInnerAzureDisk.validateJsonObject(jsonObj.getAsJsonObject("azureDisk"));
      }
      // validate the optional field `azureFile`
      if (jsonObj.get("azureFile") != null && !jsonObj.get("azureFile").isJsonNull()) {
        V1alpha1InstanceSetSpecInstancesInnerVolumesInnerAzureFile.validateJsonObject(jsonObj.getAsJsonObject("azureFile"));
      }
      // validate the optional field `cephfs`
      if (jsonObj.get("cephfs") != null && !jsonObj.get("cephfs").isJsonNull()) {
        V1alpha1InstanceSetSpecInstancesInnerVolumesInnerCephfs.validateJsonObject(jsonObj.getAsJsonObject("cephfs"));
      }
      // validate the optional field `cinder`
      if (jsonObj.get("cinder") != null && !jsonObj.get("cinder").isJsonNull()) {
        V1alpha1InstanceSetSpecInstancesInnerVolumesInnerCinder.validateJsonObject(jsonObj.getAsJsonObject("cinder"));
      }
      // validate the optional field `configMap`
      if (jsonObj.get("configMap") != null && !jsonObj.get("configMap").isJsonNull()) {
        V1alpha1InstanceSetSpecInstancesInnerVolumesInnerConfigMap.validateJsonObject(jsonObj.getAsJsonObject("configMap"));
      }
      // validate the optional field `csi`
      if (jsonObj.get("csi") != null && !jsonObj.get("csi").isJsonNull()) {
        V1alpha1InstanceSetSpecInstancesInnerVolumesInnerCsi.validateJsonObject(jsonObj.getAsJsonObject("csi"));
      }
      // validate the optional field `downwardAPI`
      if (jsonObj.get("downwardAPI") != null && !jsonObj.get("downwardAPI").isJsonNull()) {
        V1alpha1InstanceSetSpecInstancesInnerVolumesInnerDownwardAPI.validateJsonObject(jsonObj.getAsJsonObject("downwardAPI"));
      }
      // validate the optional field `emptyDir`
      if (jsonObj.get("emptyDir") != null && !jsonObj.get("emptyDir").isJsonNull()) {
        V1alpha1InstanceSetSpecInstancesInnerVolumesInnerEmptyDir.validateJsonObject(jsonObj.getAsJsonObject("emptyDir"));
      }
      // validate the optional field `ephemeral`
      if (jsonObj.get("ephemeral") != null && !jsonObj.get("ephemeral").isJsonNull()) {
        V1alpha1InstanceSetSpecInstancesInnerVolumesInnerEphemeral.validateJsonObject(jsonObj.getAsJsonObject("ephemeral"));
      }
      // validate the optional field `fc`
      if (jsonObj.get("fc") != null && !jsonObj.get("fc").isJsonNull()) {
        V1alpha1InstanceSetSpecInstancesInnerVolumesInnerFc.validateJsonObject(jsonObj.getAsJsonObject("fc"));
      }
      // validate the optional field `flexVolume`
      if (jsonObj.get("flexVolume") != null && !jsonObj.get("flexVolume").isJsonNull()) {
        V1alpha1InstanceSetSpecInstancesInnerVolumesInnerFlexVolume.validateJsonObject(jsonObj.getAsJsonObject("flexVolume"));
      }
      // validate the optional field `flocker`
      if (jsonObj.get("flocker") != null && !jsonObj.get("flocker").isJsonNull()) {
        V1alpha1InstanceSetSpecInstancesInnerVolumesInnerFlocker.validateJsonObject(jsonObj.getAsJsonObject("flocker"));
      }
      // validate the optional field `gcePersistentDisk`
      if (jsonObj.get("gcePersistentDisk") != null && !jsonObj.get("gcePersistentDisk").isJsonNull()) {
        V1alpha1InstanceSetSpecInstancesInnerVolumesInnerGcePersistentDisk.validateJsonObject(jsonObj.getAsJsonObject("gcePersistentDisk"));
      }
      // validate the optional field `gitRepo`
      if (jsonObj.get("gitRepo") != null && !jsonObj.get("gitRepo").isJsonNull()) {
        V1alpha1InstanceSetSpecInstancesInnerVolumesInnerGitRepo.validateJsonObject(jsonObj.getAsJsonObject("gitRepo"));
      }
      // validate the optional field `glusterfs`
      if (jsonObj.get("glusterfs") != null && !jsonObj.get("glusterfs").isJsonNull()) {
        V1alpha1InstanceSetSpecInstancesInnerVolumesInnerGlusterfs.validateJsonObject(jsonObj.getAsJsonObject("glusterfs"));
      }
      // validate the optional field `hostPath`
      if (jsonObj.get("hostPath") != null && !jsonObj.get("hostPath").isJsonNull()) {
        V1alpha1InstanceSetSpecInstancesInnerVolumesInnerHostPath.validateJsonObject(jsonObj.getAsJsonObject("hostPath"));
      }
      // validate the optional field `iscsi`
      if (jsonObj.get("iscsi") != null && !jsonObj.get("iscsi").isJsonNull()) {
        V1alpha1InstanceSetSpecInstancesInnerVolumesInnerIscsi.validateJsonObject(jsonObj.getAsJsonObject("iscsi"));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `nfs`
      if (jsonObj.get("nfs") != null && !jsonObj.get("nfs").isJsonNull()) {
        V1alpha1InstanceSetSpecInstancesInnerVolumesInnerNfs.validateJsonObject(jsonObj.getAsJsonObject("nfs"));
      }
      // validate the optional field `persistentVolumeClaim`
      if (jsonObj.get("persistentVolumeClaim") != null && !jsonObj.get("persistentVolumeClaim").isJsonNull()) {
        V1alpha1InstanceSetSpecInstancesInnerVolumesInnerPersistentVolumeClaim.validateJsonObject(jsonObj.getAsJsonObject("persistentVolumeClaim"));
      }
      // validate the optional field `photonPersistentDisk`
      if (jsonObj.get("photonPersistentDisk") != null && !jsonObj.get("photonPersistentDisk").isJsonNull()) {
        V1alpha1InstanceSetSpecInstancesInnerVolumesInnerPhotonPersistentDisk.validateJsonObject(jsonObj.getAsJsonObject("photonPersistentDisk"));
      }
      // validate the optional field `portworxVolume`
      if (jsonObj.get("portworxVolume") != null && !jsonObj.get("portworxVolume").isJsonNull()) {
        V1alpha1InstanceSetSpecInstancesInnerVolumesInnerPortworxVolume.validateJsonObject(jsonObj.getAsJsonObject("portworxVolume"));
      }
      // validate the optional field `projected`
      if (jsonObj.get("projected") != null && !jsonObj.get("projected").isJsonNull()) {
        V1alpha1InstanceSetSpecInstancesInnerVolumesInnerProjected.validateJsonObject(jsonObj.getAsJsonObject("projected"));
      }
      // validate the optional field `quobyte`
      if (jsonObj.get("quobyte") != null && !jsonObj.get("quobyte").isJsonNull()) {
        V1alpha1InstanceSetSpecInstancesInnerVolumesInnerQuobyte.validateJsonObject(jsonObj.getAsJsonObject("quobyte"));
      }
      // validate the optional field `rbd`
      if (jsonObj.get("rbd") != null && !jsonObj.get("rbd").isJsonNull()) {
        V1alpha1InstanceSetSpecInstancesInnerVolumesInnerRbd.validateJsonObject(jsonObj.getAsJsonObject("rbd"));
      }
      // validate the optional field `scaleIO`
      if (jsonObj.get("scaleIO") != null && !jsonObj.get("scaleIO").isJsonNull()) {
        V1alpha1InstanceSetSpecInstancesInnerVolumesInnerScaleIO.validateJsonObject(jsonObj.getAsJsonObject("scaleIO"));
      }
      // validate the optional field `secret`
      if (jsonObj.get("secret") != null && !jsonObj.get("secret").isJsonNull()) {
        V1alpha1InstanceSetSpecInstancesInnerVolumesInnerSecret.validateJsonObject(jsonObj.getAsJsonObject("secret"));
      }
      // validate the optional field `storageos`
      if (jsonObj.get("storageos") != null && !jsonObj.get("storageos").isJsonNull()) {
        V1alpha1InstanceSetSpecInstancesInnerVolumesInnerStorageos.validateJsonObject(jsonObj.getAsJsonObject("storageos"));
      }
      // validate the optional field `vsphereVolume`
      if (jsonObj.get("vsphereVolume") != null && !jsonObj.get("vsphereVolume").isJsonNull()) {
        V1alpha1InstanceSetSpecInstancesInnerVolumesInnerVsphereVolume.validateJsonObject(jsonObj.getAsJsonObject("vsphereVolume"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V1alpha1InstanceSetSpecInstancesInnerVolumesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V1alpha1InstanceSetSpecInstancesInnerVolumesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V1alpha1InstanceSetSpecInstancesInnerVolumesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V1alpha1InstanceSetSpecInstancesInnerVolumesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<V1alpha1InstanceSetSpecInstancesInnerVolumesInner>() {
           @Override
           public void write(JsonWriter out, V1alpha1InstanceSetSpecInstancesInnerVolumesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V1alpha1InstanceSetSpecInstancesInnerVolumesInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of V1alpha1InstanceSetSpecInstancesInnerVolumesInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of V1alpha1InstanceSetSpecInstancesInnerVolumesInner
  * @throws IOException if the JSON string is invalid with respect to V1alpha1InstanceSetSpecInstancesInnerVolumesInner
  */
  public static V1alpha1InstanceSetSpecInstancesInnerVolumesInner fromJson(String jsonString) throws IOException {
    return new JSON().getGson().fromJson(jsonString, V1alpha1InstanceSetSpecInstancesInnerVolumesInner.class);
  }

 /**
  * Convert an instance of V1alpha1InstanceSetSpecInstancesInnerVolumesInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return new JSON().getGson().toJson(this);
  }
}

