/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.25.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kubeblocks.extensions.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.kubeblocks.extensions.models.V1alpha1AddonSpecDefaultInstallValuesInnerExtrasInner;
import io.kubeblocks.extensions.models.V1alpha1AddonSpecDefaultInstallValuesInnerExtrasInnerResources;
import io.kubeblocks.extensions.models.V1alpha1AddonSpecDefaultInstallValuesInnerSelectorsInner;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.kubernetes.client.openapi.JSON;

/**
 * V1alpha1AddonSpecDefaultInstallValuesInner
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-05T14:02:35.998799Z[Etc/UTC]")
public class V1alpha1AddonSpecDefaultInstallValuesInner {
  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_EXTRAS = "extras";
  @SerializedName(SERIALIZED_NAME_EXTRAS)
  private List<V1alpha1AddonSpecDefaultInstallValuesInnerExtrasInner> extras;

  public static final String SERIALIZED_NAME_PERSISTENT_VOLUME_ENABLED = "persistentVolumeEnabled";
  @SerializedName(SERIALIZED_NAME_PERSISTENT_VOLUME_ENABLED)
  private Boolean persistentVolumeEnabled;

  public static final String SERIALIZED_NAME_REPLICAS = "replicas";
  @SerializedName(SERIALIZED_NAME_REPLICAS)
  private Integer replicas;

  public static final String SERIALIZED_NAME_RESOURCES = "resources";
  @SerializedName(SERIALIZED_NAME_RESOURCES)
  private V1alpha1AddonSpecDefaultInstallValuesInnerExtrasInnerResources resources;

  public static final String SERIALIZED_NAME_SELECTORS = "selectors";
  @SerializedName(SERIALIZED_NAME_SELECTORS)
  private List<V1alpha1AddonSpecDefaultInstallValuesInnerSelectorsInner> selectors;

  public static final String SERIALIZED_NAME_STORAGE_CLASS = "storageClass";
  @SerializedName(SERIALIZED_NAME_STORAGE_CLASS)
  private String storageClass;

  public static final String SERIALIZED_NAME_TOLERATIONS = "tolerations";
  @SerializedName(SERIALIZED_NAME_TOLERATIONS)
  private String tolerations;

  public V1alpha1AddonSpecDefaultInstallValuesInner() {
  }

  public V1alpha1AddonSpecDefaultInstallValuesInner enabled(Boolean enabled) {
    
    this.enabled = enabled;
    return this;
  }

   /**
   * Can be set to true if there are no specific installation attributes to be set.
   * @return enabled
  **/
  @jakarta.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }


  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public V1alpha1AddonSpecDefaultInstallValuesInner extras(List<V1alpha1AddonSpecDefaultInstallValuesInnerExtrasInner> extras) {
    
    this.extras = extras;
    return this;
  }

  public V1alpha1AddonSpecDefaultInstallValuesInner addExtrasItem(V1alpha1AddonSpecDefaultInstallValuesInnerExtrasInner extrasItem) {
    if (this.extras == null) {
      this.extras = new ArrayList<>();
    }
    this.extras.add(extrasItem);
    return this;
  }

   /**
   * Specifies the installation specifications for extra items.
   * @return extras
  **/
  @jakarta.annotation.Nullable
  public List<V1alpha1AddonSpecDefaultInstallValuesInnerExtrasInner> getExtras() {
    return extras;
  }


  public void setExtras(List<V1alpha1AddonSpecDefaultInstallValuesInnerExtrasInner> extras) {
    this.extras = extras;
  }


  public V1alpha1AddonSpecDefaultInstallValuesInner persistentVolumeEnabled(Boolean persistentVolumeEnabled) {
    
    this.persistentVolumeEnabled = persistentVolumeEnabled;
    return this;
  }

   /**
   * Indicates whether the Persistent Volume is enabled or not.
   * @return persistentVolumeEnabled
  **/
  @jakarta.annotation.Nullable
  public Boolean getPersistentVolumeEnabled() {
    return persistentVolumeEnabled;
  }


  public void setPersistentVolumeEnabled(Boolean persistentVolumeEnabled) {
    this.persistentVolumeEnabled = persistentVolumeEnabled;
  }


  public V1alpha1AddonSpecDefaultInstallValuesInner replicas(Integer replicas) {
    
    this.replicas = replicas;
    return this;
  }

   /**
   * Specifies the number of replicas.
   * @return replicas
  **/
  @jakarta.annotation.Nullable
  public Integer getReplicas() {
    return replicas;
  }


  public void setReplicas(Integer replicas) {
    this.replicas = replicas;
  }


  public V1alpha1AddonSpecDefaultInstallValuesInner resources(V1alpha1AddonSpecDefaultInstallValuesInnerExtrasInnerResources resources) {
    
    this.resources = resources;
    return this;
  }

   /**
   * Get resources
   * @return resources
  **/
  @jakarta.annotation.Nullable
  public V1alpha1AddonSpecDefaultInstallValuesInnerExtrasInnerResources getResources() {
    return resources;
  }


  public void setResources(V1alpha1AddonSpecDefaultInstallValuesInnerExtrasInnerResources resources) {
    this.resources = resources;
  }


  public V1alpha1AddonSpecDefaultInstallValuesInner selectors(List<V1alpha1AddonSpecDefaultInstallValuesInnerSelectorsInner> selectors) {
    
    this.selectors = selectors;
    return this;
  }

  public V1alpha1AddonSpecDefaultInstallValuesInner addSelectorsItem(V1alpha1AddonSpecDefaultInstallValuesInnerSelectorsInner selectorsItem) {
    if (this.selectors == null) {
      this.selectors = new ArrayList<>();
    }
    this.selectors.add(selectorsItem);
    return this;
  }

   /**
   * Indicates the default selectors for add-on installations. If multiple selectors are provided, all selectors must evaluate to true.
   * @return selectors
  **/
  @jakarta.annotation.Nullable
  public List<V1alpha1AddonSpecDefaultInstallValuesInnerSelectorsInner> getSelectors() {
    return selectors;
  }


  public void setSelectors(List<V1alpha1AddonSpecDefaultInstallValuesInnerSelectorsInner> selectors) {
    this.selectors = selectors;
  }


  public V1alpha1AddonSpecDefaultInstallValuesInner storageClass(String storageClass) {
    
    this.storageClass = storageClass;
    return this;
  }

   /**
   * Specifies the name of the storage class.
   * @return storageClass
  **/
  @jakarta.annotation.Nullable
  public String getStorageClass() {
    return storageClass;
  }


  public void setStorageClass(String storageClass) {
    this.storageClass = storageClass;
  }


  public V1alpha1AddonSpecDefaultInstallValuesInner tolerations(String tolerations) {
    
    this.tolerations = tolerations;
    return this;
  }

   /**
   * Specifies the tolerations in a JSON array string format.
   * @return tolerations
  **/
  @jakarta.annotation.Nullable
  public String getTolerations() {
    return tolerations;
  }


  public void setTolerations(String tolerations) {
    this.tolerations = tolerations;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1AddonSpecDefaultInstallValuesInner v1alpha1AddonSpecDefaultInstallValuesInner = (V1alpha1AddonSpecDefaultInstallValuesInner) o;
    return Objects.equals(this.enabled, v1alpha1AddonSpecDefaultInstallValuesInner.enabled) &&
        Objects.equals(this.extras, v1alpha1AddonSpecDefaultInstallValuesInner.extras) &&
        Objects.equals(this.persistentVolumeEnabled, v1alpha1AddonSpecDefaultInstallValuesInner.persistentVolumeEnabled) &&
        Objects.equals(this.replicas, v1alpha1AddonSpecDefaultInstallValuesInner.replicas) &&
        Objects.equals(this.resources, v1alpha1AddonSpecDefaultInstallValuesInner.resources) &&
        Objects.equals(this.selectors, v1alpha1AddonSpecDefaultInstallValuesInner.selectors) &&
        Objects.equals(this.storageClass, v1alpha1AddonSpecDefaultInstallValuesInner.storageClass) &&
        Objects.equals(this.tolerations, v1alpha1AddonSpecDefaultInstallValuesInner.tolerations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enabled, extras, persistentVolumeEnabled, replicas, resources, selectors, storageClass, tolerations);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1AddonSpecDefaultInstallValuesInner {\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    extras: ").append(toIndentedString(extras)).append("\n");
    sb.append("    persistentVolumeEnabled: ").append(toIndentedString(persistentVolumeEnabled)).append("\n");
    sb.append("    replicas: ").append(toIndentedString(replicas)).append("\n");
    sb.append("    resources: ").append(toIndentedString(resources)).append("\n");
    sb.append("    selectors: ").append(toIndentedString(selectors)).append("\n");
    sb.append("    storageClass: ").append(toIndentedString(storageClass)).append("\n");
    sb.append("    tolerations: ").append(toIndentedString(tolerations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("enabled");
    openapiFields.add("extras");
    openapiFields.add("persistentVolumeEnabled");
    openapiFields.add("replicas");
    openapiFields.add("resources");
    openapiFields.add("selectors");
    openapiFields.add("storageClass");
    openapiFields.add("tolerations");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to V1alpha1AddonSpecDefaultInstallValuesInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!V1alpha1AddonSpecDefaultInstallValuesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in V1alpha1AddonSpecDefaultInstallValuesInner is not found in the empty JSON string", V1alpha1AddonSpecDefaultInstallValuesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!V1alpha1AddonSpecDefaultInstallValuesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `V1alpha1AddonSpecDefaultInstallValuesInner` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("extras") != null && !jsonObj.get("extras").isJsonNull()) {
        JsonArray jsonArrayextras = jsonObj.getAsJsonArray("extras");
        if (jsonArrayextras != null) {
          // ensure the json data is an array
          if (!jsonObj.get("extras").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `extras` to be an array in the JSON string but got `%s`", jsonObj.get("extras").toString()));
          }

          // validate the optional field `extras` (array)
          for (int i = 0; i < jsonArrayextras.size(); i++) {
            V1alpha1AddonSpecDefaultInstallValuesInnerExtrasInner.validateJsonObject(jsonArrayextras.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `resources`
      if (jsonObj.get("resources") != null && !jsonObj.get("resources").isJsonNull()) {
        V1alpha1AddonSpecDefaultInstallValuesInnerExtrasInnerResources.validateJsonObject(jsonObj.getAsJsonObject("resources"));
      }
      if (jsonObj.get("selectors") != null && !jsonObj.get("selectors").isJsonNull()) {
        JsonArray jsonArrayselectors = jsonObj.getAsJsonArray("selectors");
        if (jsonArrayselectors != null) {
          // ensure the json data is an array
          if (!jsonObj.get("selectors").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `selectors` to be an array in the JSON string but got `%s`", jsonObj.get("selectors").toString()));
          }

          // validate the optional field `selectors` (array)
          for (int i = 0; i < jsonArrayselectors.size(); i++) {
            V1alpha1AddonSpecDefaultInstallValuesInnerSelectorsInner.validateJsonObject(jsonArrayselectors.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("storageClass") != null && !jsonObj.get("storageClass").isJsonNull()) && !jsonObj.get("storageClass").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `storageClass` to be a primitive type in the JSON string but got `%s`", jsonObj.get("storageClass").toString()));
      }
      if ((jsonObj.get("tolerations") != null && !jsonObj.get("tolerations").isJsonNull()) && !jsonObj.get("tolerations").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tolerations` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tolerations").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V1alpha1AddonSpecDefaultInstallValuesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V1alpha1AddonSpecDefaultInstallValuesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V1alpha1AddonSpecDefaultInstallValuesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V1alpha1AddonSpecDefaultInstallValuesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<V1alpha1AddonSpecDefaultInstallValuesInner>() {
           @Override
           public void write(JsonWriter out, V1alpha1AddonSpecDefaultInstallValuesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V1alpha1AddonSpecDefaultInstallValuesInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of V1alpha1AddonSpecDefaultInstallValuesInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of V1alpha1AddonSpecDefaultInstallValuesInner
  * @throws IOException if the JSON string is invalid with respect to V1alpha1AddonSpecDefaultInstallValuesInner
  */
  public static V1alpha1AddonSpecDefaultInstallValuesInner fromJson(String jsonString) throws IOException {
    return new JSON().getGson().fromJson(jsonString, V1alpha1AddonSpecDefaultInstallValuesInner.class);
  }

 /**
  * Convert an instance of V1alpha1AddonSpecDefaultInstallValuesInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return new JSON().getGson().toJson(this);
  }
}

