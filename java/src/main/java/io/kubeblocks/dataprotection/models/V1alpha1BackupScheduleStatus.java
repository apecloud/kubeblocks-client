/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.25.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kubeblocks.dataprotection.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.kubeblocks.dataprotection.models.V1alpha1BackupScheduleStatusSchedulesValue;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.kubernetes.client.openapi.JSON;

/**
 * BackupScheduleStatus defines the observed state of BackupSchedule.
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-05T14:01:54.109391Z[Etc/UTC]")
public class V1alpha1BackupScheduleStatus {
  public static final String SERIALIZED_NAME_FAILURE_REASON = "failureReason";
  @SerializedName(SERIALIZED_NAME_FAILURE_REASON)
  private String failureReason;

  public static final String SERIALIZED_NAME_OBSERVED_GENERATION = "observedGeneration";
  @SerializedName(SERIALIZED_NAME_OBSERVED_GENERATION)
  private Long observedGeneration;

  public static final String SERIALIZED_NAME_PHASE = "phase";
  @SerializedName(SERIALIZED_NAME_PHASE)
  private String phase;

  public static final String SERIALIZED_NAME_SCHEDULES = "schedules";
  @SerializedName(SERIALIZED_NAME_SCHEDULES)
  private Map<String, V1alpha1BackupScheduleStatusSchedulesValue> schedules = new HashMap<>();

  public V1alpha1BackupScheduleStatus() {
  }

  public V1alpha1BackupScheduleStatus failureReason(String failureReason) {
    
    this.failureReason = failureReason;
    return this;
  }

   /**
   * Represents an error that caused the backup to fail.
   * @return failureReason
  **/
  @jakarta.annotation.Nullable
  public String getFailureReason() {
    return failureReason;
  }


  public void setFailureReason(String failureReason) {
    this.failureReason = failureReason;
  }


  public V1alpha1BackupScheduleStatus observedGeneration(Long observedGeneration) {
    
    this.observedGeneration = observedGeneration;
    return this;
  }

   /**
   * Represents the most recent generation observed for this BackupSchedule. It refers to the BackupSchedule&#39;s generation, which is updated on mutation by the API Server.
   * @return observedGeneration
  **/
  @jakarta.annotation.Nullable
  public Long getObservedGeneration() {
    return observedGeneration;
  }


  public void setObservedGeneration(Long observedGeneration) {
    this.observedGeneration = observedGeneration;
  }


  public V1alpha1BackupScheduleStatus phase(String phase) {
    
    this.phase = phase;
    return this;
  }

   /**
   * Describes the phase of the BackupSchedule.
   * @return phase
  **/
  @jakarta.annotation.Nullable
  public String getPhase() {
    return phase;
  }


  public void setPhase(String phase) {
    this.phase = phase;
  }


  public V1alpha1BackupScheduleStatus schedules(Map<String, V1alpha1BackupScheduleStatusSchedulesValue> schedules) {
    
    this.schedules = schedules;
    return this;
  }

  public V1alpha1BackupScheduleStatus putSchedulesItem(String key, V1alpha1BackupScheduleStatusSchedulesValue schedulesItem) {
    if (this.schedules == null) {
      this.schedules = new HashMap<>();
    }
    this.schedules.put(key, schedulesItem);
    return this;
  }

   /**
   * Describes the status of each schedule.
   * @return schedules
  **/
  @jakarta.annotation.Nullable
  public Map<String, V1alpha1BackupScheduleStatusSchedulesValue> getSchedules() {
    return schedules;
  }


  public void setSchedules(Map<String, V1alpha1BackupScheduleStatusSchedulesValue> schedules) {
    this.schedules = schedules;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1BackupScheduleStatus v1alpha1BackupScheduleStatus = (V1alpha1BackupScheduleStatus) o;
    return Objects.equals(this.failureReason, v1alpha1BackupScheduleStatus.failureReason) &&
        Objects.equals(this.observedGeneration, v1alpha1BackupScheduleStatus.observedGeneration) &&
        Objects.equals(this.phase, v1alpha1BackupScheduleStatus.phase) &&
        Objects.equals(this.schedules, v1alpha1BackupScheduleStatus.schedules);
  }

  @Override
  public int hashCode() {
    return Objects.hash(failureReason, observedGeneration, phase, schedules);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1BackupScheduleStatus {\n");
    sb.append("    failureReason: ").append(toIndentedString(failureReason)).append("\n");
    sb.append("    observedGeneration: ").append(toIndentedString(observedGeneration)).append("\n");
    sb.append("    phase: ").append(toIndentedString(phase)).append("\n");
    sb.append("    schedules: ").append(toIndentedString(schedules)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("failureReason");
    openapiFields.add("observedGeneration");
    openapiFields.add("phase");
    openapiFields.add("schedules");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to V1alpha1BackupScheduleStatus
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!V1alpha1BackupScheduleStatus.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in V1alpha1BackupScheduleStatus is not found in the empty JSON string", V1alpha1BackupScheduleStatus.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!V1alpha1BackupScheduleStatus.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `V1alpha1BackupScheduleStatus` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("failureReason") != null && !jsonObj.get("failureReason").isJsonNull()) && !jsonObj.get("failureReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `failureReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("failureReason").toString()));
      }
      if ((jsonObj.get("phase") != null && !jsonObj.get("phase").isJsonNull()) && !jsonObj.get("phase").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phase` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phase").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V1alpha1BackupScheduleStatus.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V1alpha1BackupScheduleStatus' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V1alpha1BackupScheduleStatus> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V1alpha1BackupScheduleStatus.class));

       return (TypeAdapter<T>) new TypeAdapter<V1alpha1BackupScheduleStatus>() {
           @Override
           public void write(JsonWriter out, V1alpha1BackupScheduleStatus value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V1alpha1BackupScheduleStatus read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of V1alpha1BackupScheduleStatus given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of V1alpha1BackupScheduleStatus
  * @throws IOException if the JSON string is invalid with respect to V1alpha1BackupScheduleStatus
  */
  public static V1alpha1BackupScheduleStatus fromJson(String jsonString) throws IOException {
    return new JSON().getGson().fromJson(jsonString, V1alpha1BackupScheduleStatus.class);
  }

 /**
  * Convert an instance of V1alpha1BackupScheduleStatus to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return new JSON().getGson().toJson(this);
  }
}

