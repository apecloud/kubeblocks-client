/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.25.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kubeblocks.dataprotection.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.kubeblocks.dataprotection.models.V1alpha1BackupRepoStatusConditionsInner;
import io.kubeblocks.dataprotection.models.V1alpha1BackupRepoStatusGeneratedCSIDriverSecret;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.kubernetes.client.openapi.JSON;

/**
 * BackupRepoStatus defines the observed state of &#x60;BackupRepo&#x60;.
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-05T14:01:33.782064Z[Etc/UTC]")
public class V1alpha1BackupRepoStatus {
  public static final String SERIALIZED_NAME_BACKUP_P_V_C_NAME = "backupPVCName";
  @SerializedName(SERIALIZED_NAME_BACKUP_P_V_C_NAME)
  private String backupPVCName;

  public static final String SERIALIZED_NAME_CONDITIONS = "conditions";
  @SerializedName(SERIALIZED_NAME_CONDITIONS)
  private List<V1alpha1BackupRepoStatusConditionsInner> conditions;

  public static final String SERIALIZED_NAME_GENERATED_C_S_I_DRIVER_SECRET = "generatedCSIDriverSecret";
  @SerializedName(SERIALIZED_NAME_GENERATED_C_S_I_DRIVER_SECRET)
  private V1alpha1BackupRepoStatusGeneratedCSIDriverSecret generatedCSIDriverSecret;

  public static final String SERIALIZED_NAME_GENERATED_STORAGE_CLASS_NAME = "generatedStorageClassName";
  @SerializedName(SERIALIZED_NAME_GENERATED_STORAGE_CLASS_NAME)
  private String generatedStorageClassName;

  public static final String SERIALIZED_NAME_IS_DEFAULT = "isDefault";
  @SerializedName(SERIALIZED_NAME_IS_DEFAULT)
  private Boolean isDefault;

  public static final String SERIALIZED_NAME_OBSERVED_GENERATION = "observedGeneration";
  @SerializedName(SERIALIZED_NAME_OBSERVED_GENERATION)
  private Long observedGeneration;

  public static final String SERIALIZED_NAME_PHASE = "phase";
  @SerializedName(SERIALIZED_NAME_PHASE)
  private String phase;

  public static final String SERIALIZED_NAME_TOOL_CONFIG_SECRET_NAME = "toolConfigSecretName";
  @SerializedName(SERIALIZED_NAME_TOOL_CONFIG_SECRET_NAME)
  private String toolConfigSecretName;

  public V1alpha1BackupRepoStatus() {
  }

  public V1alpha1BackupRepoStatus backupPVCName(String backupPVCName) {
    
    this.backupPVCName = backupPVCName;
    return this;
  }

   /**
   * Represents the name of the PVC that stores backup data.
   * @return backupPVCName
  **/
  @jakarta.annotation.Nullable
  public String getBackupPVCName() {
    return backupPVCName;
  }


  public void setBackupPVCName(String backupPVCName) {
    this.backupPVCName = backupPVCName;
  }


  public V1alpha1BackupRepoStatus conditions(List<V1alpha1BackupRepoStatusConditionsInner> conditions) {
    
    this.conditions = conditions;
    return this;
  }

  public V1alpha1BackupRepoStatus addConditionsItem(V1alpha1BackupRepoStatusConditionsInner conditionsItem) {
    if (this.conditions == null) {
      this.conditions = new ArrayList<>();
    }
    this.conditions.add(conditionsItem);
    return this;
  }

   /**
   * Provides a detailed description of the current state of the backup repository.
   * @return conditions
  **/
  @jakarta.annotation.Nullable
  public List<V1alpha1BackupRepoStatusConditionsInner> getConditions() {
    return conditions;
  }


  public void setConditions(List<V1alpha1BackupRepoStatusConditionsInner> conditions) {
    this.conditions = conditions;
  }


  public V1alpha1BackupRepoStatus generatedCSIDriverSecret(V1alpha1BackupRepoStatusGeneratedCSIDriverSecret generatedCSIDriverSecret) {
    
    this.generatedCSIDriverSecret = generatedCSIDriverSecret;
    return this;
  }

   /**
   * Get generatedCSIDriverSecret
   * @return generatedCSIDriverSecret
  **/
  @jakarta.annotation.Nullable
  public V1alpha1BackupRepoStatusGeneratedCSIDriverSecret getGeneratedCSIDriverSecret() {
    return generatedCSIDriverSecret;
  }


  public void setGeneratedCSIDriverSecret(V1alpha1BackupRepoStatusGeneratedCSIDriverSecret generatedCSIDriverSecret) {
    this.generatedCSIDriverSecret = generatedCSIDriverSecret;
  }


  public V1alpha1BackupRepoStatus generatedStorageClassName(String generatedStorageClassName) {
    
    this.generatedStorageClassName = generatedStorageClassName;
    return this;
  }

   /**
   * Represents the name of the generated storage class.
   * @return generatedStorageClassName
  **/
  @jakarta.annotation.Nullable
  public String getGeneratedStorageClassName() {
    return generatedStorageClassName;
  }


  public void setGeneratedStorageClassName(String generatedStorageClassName) {
    this.generatedStorageClassName = generatedStorageClassName;
  }


  public V1alpha1BackupRepoStatus isDefault(Boolean isDefault) {
    
    this.isDefault = isDefault;
    return this;
  }

   /**
   * Indicates if this backup repository is the default one.\\
   * @return isDefault
  **/
  @jakarta.annotation.Nullable
  public Boolean getIsDefault() {
    return isDefault;
  }


  public void setIsDefault(Boolean isDefault) {
    this.isDefault = isDefault;
  }


  public V1alpha1BackupRepoStatus observedGeneration(Long observedGeneration) {
    
    this.observedGeneration = observedGeneration;
    return this;
  }

   /**
   * Represents the latest generation of the resource that the controller has observed.
   * @return observedGeneration
  **/
  @jakarta.annotation.Nullable
  public Long getObservedGeneration() {
    return observedGeneration;
  }


  public void setObservedGeneration(Long observedGeneration) {
    this.observedGeneration = observedGeneration;
  }


  public V1alpha1BackupRepoStatus phase(String phase) {
    
    this.phase = phase;
    return this;
  }

   /**
   * Represents the current phase of reconciliation for the backup repository. Permissible values are PreChecking, Failed, Ready, Deleting.
   * @return phase
  **/
  @jakarta.annotation.Nullable
  public String getPhase() {
    return phase;
  }


  public void setPhase(String phase) {
    this.phase = phase;
  }


  public V1alpha1BackupRepoStatus toolConfigSecretName(String toolConfigSecretName) {
    
    this.toolConfigSecretName = toolConfigSecretName;
    return this;
  }

   /**
   * Represents the name of the secret that contains the configuration for the tool.
   * @return toolConfigSecretName
  **/
  @jakarta.annotation.Nullable
  public String getToolConfigSecretName() {
    return toolConfigSecretName;
  }


  public void setToolConfigSecretName(String toolConfigSecretName) {
    this.toolConfigSecretName = toolConfigSecretName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1BackupRepoStatus v1alpha1BackupRepoStatus = (V1alpha1BackupRepoStatus) o;
    return Objects.equals(this.backupPVCName, v1alpha1BackupRepoStatus.backupPVCName) &&
        Objects.equals(this.conditions, v1alpha1BackupRepoStatus.conditions) &&
        Objects.equals(this.generatedCSIDriverSecret, v1alpha1BackupRepoStatus.generatedCSIDriverSecret) &&
        Objects.equals(this.generatedStorageClassName, v1alpha1BackupRepoStatus.generatedStorageClassName) &&
        Objects.equals(this.isDefault, v1alpha1BackupRepoStatus.isDefault) &&
        Objects.equals(this.observedGeneration, v1alpha1BackupRepoStatus.observedGeneration) &&
        Objects.equals(this.phase, v1alpha1BackupRepoStatus.phase) &&
        Objects.equals(this.toolConfigSecretName, v1alpha1BackupRepoStatus.toolConfigSecretName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(backupPVCName, conditions, generatedCSIDriverSecret, generatedStorageClassName, isDefault, observedGeneration, phase, toolConfigSecretName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1BackupRepoStatus {\n");
    sb.append("    backupPVCName: ").append(toIndentedString(backupPVCName)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    generatedCSIDriverSecret: ").append(toIndentedString(generatedCSIDriverSecret)).append("\n");
    sb.append("    generatedStorageClassName: ").append(toIndentedString(generatedStorageClassName)).append("\n");
    sb.append("    isDefault: ").append(toIndentedString(isDefault)).append("\n");
    sb.append("    observedGeneration: ").append(toIndentedString(observedGeneration)).append("\n");
    sb.append("    phase: ").append(toIndentedString(phase)).append("\n");
    sb.append("    toolConfigSecretName: ").append(toIndentedString(toolConfigSecretName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("backupPVCName");
    openapiFields.add("conditions");
    openapiFields.add("generatedCSIDriverSecret");
    openapiFields.add("generatedStorageClassName");
    openapiFields.add("isDefault");
    openapiFields.add("observedGeneration");
    openapiFields.add("phase");
    openapiFields.add("toolConfigSecretName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to V1alpha1BackupRepoStatus
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!V1alpha1BackupRepoStatus.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in V1alpha1BackupRepoStatus is not found in the empty JSON string", V1alpha1BackupRepoStatus.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!V1alpha1BackupRepoStatus.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `V1alpha1BackupRepoStatus` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("backupPVCName") != null && !jsonObj.get("backupPVCName").isJsonNull()) && !jsonObj.get("backupPVCName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `backupPVCName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("backupPVCName").toString()));
      }
      if (jsonObj.get("conditions") != null && !jsonObj.get("conditions").isJsonNull()) {
        JsonArray jsonArrayconditions = jsonObj.getAsJsonArray("conditions");
        if (jsonArrayconditions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("conditions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `conditions` to be an array in the JSON string but got `%s`", jsonObj.get("conditions").toString()));
          }

          // validate the optional field `conditions` (array)
          for (int i = 0; i < jsonArrayconditions.size(); i++) {
            V1alpha1BackupRepoStatusConditionsInner.validateJsonObject(jsonArrayconditions.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `generatedCSIDriverSecret`
      if (jsonObj.get("generatedCSIDriverSecret") != null && !jsonObj.get("generatedCSIDriverSecret").isJsonNull()) {
        V1alpha1BackupRepoStatusGeneratedCSIDriverSecret.validateJsonObject(jsonObj.getAsJsonObject("generatedCSIDriverSecret"));
      }
      if ((jsonObj.get("generatedStorageClassName") != null && !jsonObj.get("generatedStorageClassName").isJsonNull()) && !jsonObj.get("generatedStorageClassName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `generatedStorageClassName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("generatedStorageClassName").toString()));
      }
      if ((jsonObj.get("phase") != null && !jsonObj.get("phase").isJsonNull()) && !jsonObj.get("phase").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phase` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phase").toString()));
      }
      if ((jsonObj.get("toolConfigSecretName") != null && !jsonObj.get("toolConfigSecretName").isJsonNull()) && !jsonObj.get("toolConfigSecretName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `toolConfigSecretName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("toolConfigSecretName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V1alpha1BackupRepoStatus.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V1alpha1BackupRepoStatus' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V1alpha1BackupRepoStatus> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V1alpha1BackupRepoStatus.class));

       return (TypeAdapter<T>) new TypeAdapter<V1alpha1BackupRepoStatus>() {
           @Override
           public void write(JsonWriter out, V1alpha1BackupRepoStatus value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V1alpha1BackupRepoStatus read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of V1alpha1BackupRepoStatus given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of V1alpha1BackupRepoStatus
  * @throws IOException if the JSON string is invalid with respect to V1alpha1BackupRepoStatus
  */
  public static V1alpha1BackupRepoStatus fromJson(String jsonString) throws IOException {
    return new JSON().getGson().fromJson(jsonString, V1alpha1BackupRepoStatus.class);
  }

 /**
  * Convert an instance of V1alpha1BackupRepoStatus to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return new JSON().getGson().toJson(this);
  }
}

