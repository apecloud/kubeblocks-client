/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.25.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kubeblocks.apps.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.kubeblocks.apps.models.V1alpha1ComponentSpecInstancesInnerVolumesInnerAwsElasticBlockStore;
import io.kubeblocks.apps.models.V1alpha1ComponentSpecInstancesInnerVolumesInnerAzureDisk;
import io.kubeblocks.apps.models.V1alpha1ComponentSpecInstancesInnerVolumesInnerAzureFile;
import io.kubeblocks.apps.models.V1alpha1ComponentSpecInstancesInnerVolumesInnerCephfs;
import io.kubeblocks.apps.models.V1alpha1ComponentSpecInstancesInnerVolumesInnerCinder;
import io.kubeblocks.apps.models.V1alpha1ComponentSpecInstancesInnerVolumesInnerConfigMap;
import io.kubeblocks.apps.models.V1alpha1ComponentSpecInstancesInnerVolumesInnerCsi;
import io.kubeblocks.apps.models.V1alpha1ComponentSpecInstancesInnerVolumesInnerDownwardAPI;
import io.kubeblocks.apps.models.V1alpha1ComponentSpecInstancesInnerVolumesInnerEmptyDir;
import io.kubeblocks.apps.models.V1alpha1ComponentSpecInstancesInnerVolumesInnerEphemeral;
import io.kubeblocks.apps.models.V1alpha1ComponentSpecInstancesInnerVolumesInnerFc;
import io.kubeblocks.apps.models.V1alpha1ComponentSpecInstancesInnerVolumesInnerFlexVolume;
import io.kubeblocks.apps.models.V1alpha1ComponentSpecInstancesInnerVolumesInnerFlocker;
import io.kubeblocks.apps.models.V1alpha1ComponentSpecInstancesInnerVolumesInnerGcePersistentDisk;
import io.kubeblocks.apps.models.V1alpha1ComponentSpecInstancesInnerVolumesInnerGitRepo;
import io.kubeblocks.apps.models.V1alpha1ComponentSpecInstancesInnerVolumesInnerGlusterfs;
import io.kubeblocks.apps.models.V1alpha1ComponentSpecInstancesInnerVolumesInnerHostPath;
import io.kubeblocks.apps.models.V1alpha1ComponentSpecInstancesInnerVolumesInnerIscsi;
import io.kubeblocks.apps.models.V1alpha1ComponentSpecInstancesInnerVolumesInnerNfs;
import io.kubeblocks.apps.models.V1alpha1ComponentSpecInstancesInnerVolumesInnerPersistentVolumeClaim;
import io.kubeblocks.apps.models.V1alpha1ComponentSpecInstancesInnerVolumesInnerPhotonPersistentDisk;
import io.kubeblocks.apps.models.V1alpha1ComponentSpecInstancesInnerVolumesInnerPortworxVolume;
import io.kubeblocks.apps.models.V1alpha1ComponentSpecInstancesInnerVolumesInnerProjected;
import io.kubeblocks.apps.models.V1alpha1ComponentSpecInstancesInnerVolumesInnerQuobyte;
import io.kubeblocks.apps.models.V1alpha1ComponentSpecInstancesInnerVolumesInnerRbd;
import io.kubeblocks.apps.models.V1alpha1ComponentSpecInstancesInnerVolumesInnerScaleIO;
import io.kubeblocks.apps.models.V1alpha1ComponentSpecInstancesInnerVolumesInnerSecret;
import io.kubeblocks.apps.models.V1alpha1ComponentSpecInstancesInnerVolumesInnerStorageos;
import io.kubeblocks.apps.models.V1alpha1ComponentSpecInstancesInnerVolumesInnerVsphereVolume;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.kubernetes.client.openapi.JSON;

/**
 * Volume represents a named volume in a pod that may be accessed by any container in the pod.
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-05T13:58:42.635097Z[Etc/UTC]")
public class V1alpha1ComponentSpecInstancesInnerVolumesInner {
  public static final String SERIALIZED_NAME_AWS_ELASTIC_BLOCK_STORE = "awsElasticBlockStore";
  @SerializedName(SERIALIZED_NAME_AWS_ELASTIC_BLOCK_STORE)
  private V1alpha1ComponentSpecInstancesInnerVolumesInnerAwsElasticBlockStore awsElasticBlockStore;

  public static final String SERIALIZED_NAME_AZURE_DISK = "azureDisk";
  @SerializedName(SERIALIZED_NAME_AZURE_DISK)
  private V1alpha1ComponentSpecInstancesInnerVolumesInnerAzureDisk azureDisk;

  public static final String SERIALIZED_NAME_AZURE_FILE = "azureFile";
  @SerializedName(SERIALIZED_NAME_AZURE_FILE)
  private V1alpha1ComponentSpecInstancesInnerVolumesInnerAzureFile azureFile;

  public static final String SERIALIZED_NAME_CEPHFS = "cephfs";
  @SerializedName(SERIALIZED_NAME_CEPHFS)
  private V1alpha1ComponentSpecInstancesInnerVolumesInnerCephfs cephfs;

  public static final String SERIALIZED_NAME_CINDER = "cinder";
  @SerializedName(SERIALIZED_NAME_CINDER)
  private V1alpha1ComponentSpecInstancesInnerVolumesInnerCinder cinder;

  public static final String SERIALIZED_NAME_CONFIG_MAP = "configMap";
  @SerializedName(SERIALIZED_NAME_CONFIG_MAP)
  private V1alpha1ComponentSpecInstancesInnerVolumesInnerConfigMap configMap;

  public static final String SERIALIZED_NAME_CSI = "csi";
  @SerializedName(SERIALIZED_NAME_CSI)
  private V1alpha1ComponentSpecInstancesInnerVolumesInnerCsi csi;

  public static final String SERIALIZED_NAME_DOWNWARD_A_P_I = "downwardAPI";
  @SerializedName(SERIALIZED_NAME_DOWNWARD_A_P_I)
  private V1alpha1ComponentSpecInstancesInnerVolumesInnerDownwardAPI downwardAPI;

  public static final String SERIALIZED_NAME_EMPTY_DIR = "emptyDir";
  @SerializedName(SERIALIZED_NAME_EMPTY_DIR)
  private V1alpha1ComponentSpecInstancesInnerVolumesInnerEmptyDir emptyDir;

  public static final String SERIALIZED_NAME_EPHEMERAL = "ephemeral";
  @SerializedName(SERIALIZED_NAME_EPHEMERAL)
  private V1alpha1ComponentSpecInstancesInnerVolumesInnerEphemeral ephemeral;

  public static final String SERIALIZED_NAME_FC = "fc";
  @SerializedName(SERIALIZED_NAME_FC)
  private V1alpha1ComponentSpecInstancesInnerVolumesInnerFc fc;

  public static final String SERIALIZED_NAME_FLEX_VOLUME = "flexVolume";
  @SerializedName(SERIALIZED_NAME_FLEX_VOLUME)
  private V1alpha1ComponentSpecInstancesInnerVolumesInnerFlexVolume flexVolume;

  public static final String SERIALIZED_NAME_FLOCKER = "flocker";
  @SerializedName(SERIALIZED_NAME_FLOCKER)
  private V1alpha1ComponentSpecInstancesInnerVolumesInnerFlocker flocker;

  public static final String SERIALIZED_NAME_GCE_PERSISTENT_DISK = "gcePersistentDisk";
  @SerializedName(SERIALIZED_NAME_GCE_PERSISTENT_DISK)
  private V1alpha1ComponentSpecInstancesInnerVolumesInnerGcePersistentDisk gcePersistentDisk;

  public static final String SERIALIZED_NAME_GIT_REPO = "gitRepo";
  @SerializedName(SERIALIZED_NAME_GIT_REPO)
  private V1alpha1ComponentSpecInstancesInnerVolumesInnerGitRepo gitRepo;

  public static final String SERIALIZED_NAME_GLUSTERFS = "glusterfs";
  @SerializedName(SERIALIZED_NAME_GLUSTERFS)
  private V1alpha1ComponentSpecInstancesInnerVolumesInnerGlusterfs glusterfs;

  public static final String SERIALIZED_NAME_HOST_PATH = "hostPath";
  @SerializedName(SERIALIZED_NAME_HOST_PATH)
  private V1alpha1ComponentSpecInstancesInnerVolumesInnerHostPath hostPath;

  public static final String SERIALIZED_NAME_ISCSI = "iscsi";
  @SerializedName(SERIALIZED_NAME_ISCSI)
  private V1alpha1ComponentSpecInstancesInnerVolumesInnerIscsi iscsi;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NFS = "nfs";
  @SerializedName(SERIALIZED_NAME_NFS)
  private V1alpha1ComponentSpecInstancesInnerVolumesInnerNfs nfs;

  public static final String SERIALIZED_NAME_PERSISTENT_VOLUME_CLAIM = "persistentVolumeClaim";
  @SerializedName(SERIALIZED_NAME_PERSISTENT_VOLUME_CLAIM)
  private V1alpha1ComponentSpecInstancesInnerVolumesInnerPersistentVolumeClaim persistentVolumeClaim;

  public static final String SERIALIZED_NAME_PHOTON_PERSISTENT_DISK = "photonPersistentDisk";
  @SerializedName(SERIALIZED_NAME_PHOTON_PERSISTENT_DISK)
  private V1alpha1ComponentSpecInstancesInnerVolumesInnerPhotonPersistentDisk photonPersistentDisk;

  public static final String SERIALIZED_NAME_PORTWORX_VOLUME = "portworxVolume";
  @SerializedName(SERIALIZED_NAME_PORTWORX_VOLUME)
  private V1alpha1ComponentSpecInstancesInnerVolumesInnerPortworxVolume portworxVolume;

  public static final String SERIALIZED_NAME_PROJECTED = "projected";
  @SerializedName(SERIALIZED_NAME_PROJECTED)
  private V1alpha1ComponentSpecInstancesInnerVolumesInnerProjected projected;

  public static final String SERIALIZED_NAME_QUOBYTE = "quobyte";
  @SerializedName(SERIALIZED_NAME_QUOBYTE)
  private V1alpha1ComponentSpecInstancesInnerVolumesInnerQuobyte quobyte;

  public static final String SERIALIZED_NAME_RBD = "rbd";
  @SerializedName(SERIALIZED_NAME_RBD)
  private V1alpha1ComponentSpecInstancesInnerVolumesInnerRbd rbd;

  public static final String SERIALIZED_NAME_SCALE_I_O = "scaleIO";
  @SerializedName(SERIALIZED_NAME_SCALE_I_O)
  private V1alpha1ComponentSpecInstancesInnerVolumesInnerScaleIO scaleIO;

  public static final String SERIALIZED_NAME_SECRET = "secret";
  @SerializedName(SERIALIZED_NAME_SECRET)
  private V1alpha1ComponentSpecInstancesInnerVolumesInnerSecret secret;

  public static final String SERIALIZED_NAME_STORAGEOS = "storageos";
  @SerializedName(SERIALIZED_NAME_STORAGEOS)
  private V1alpha1ComponentSpecInstancesInnerVolumesInnerStorageos storageos;

  public static final String SERIALIZED_NAME_VSPHERE_VOLUME = "vsphereVolume";
  @SerializedName(SERIALIZED_NAME_VSPHERE_VOLUME)
  private V1alpha1ComponentSpecInstancesInnerVolumesInnerVsphereVolume vsphereVolume;

  public V1alpha1ComponentSpecInstancesInnerVolumesInner() {
  }

  public V1alpha1ComponentSpecInstancesInnerVolumesInner awsElasticBlockStore(V1alpha1ComponentSpecInstancesInnerVolumesInnerAwsElasticBlockStore awsElasticBlockStore) {
    
    this.awsElasticBlockStore = awsElasticBlockStore;
    return this;
  }

   /**
   * Get awsElasticBlockStore
   * @return awsElasticBlockStore
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ComponentSpecInstancesInnerVolumesInnerAwsElasticBlockStore getAwsElasticBlockStore() {
    return awsElasticBlockStore;
  }


  public void setAwsElasticBlockStore(V1alpha1ComponentSpecInstancesInnerVolumesInnerAwsElasticBlockStore awsElasticBlockStore) {
    this.awsElasticBlockStore = awsElasticBlockStore;
  }


  public V1alpha1ComponentSpecInstancesInnerVolumesInner azureDisk(V1alpha1ComponentSpecInstancesInnerVolumesInnerAzureDisk azureDisk) {
    
    this.azureDisk = azureDisk;
    return this;
  }

   /**
   * Get azureDisk
   * @return azureDisk
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ComponentSpecInstancesInnerVolumesInnerAzureDisk getAzureDisk() {
    return azureDisk;
  }


  public void setAzureDisk(V1alpha1ComponentSpecInstancesInnerVolumesInnerAzureDisk azureDisk) {
    this.azureDisk = azureDisk;
  }


  public V1alpha1ComponentSpecInstancesInnerVolumesInner azureFile(V1alpha1ComponentSpecInstancesInnerVolumesInnerAzureFile azureFile) {
    
    this.azureFile = azureFile;
    return this;
  }

   /**
   * Get azureFile
   * @return azureFile
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ComponentSpecInstancesInnerVolumesInnerAzureFile getAzureFile() {
    return azureFile;
  }


  public void setAzureFile(V1alpha1ComponentSpecInstancesInnerVolumesInnerAzureFile azureFile) {
    this.azureFile = azureFile;
  }


  public V1alpha1ComponentSpecInstancesInnerVolumesInner cephfs(V1alpha1ComponentSpecInstancesInnerVolumesInnerCephfs cephfs) {
    
    this.cephfs = cephfs;
    return this;
  }

   /**
   * Get cephfs
   * @return cephfs
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ComponentSpecInstancesInnerVolumesInnerCephfs getCephfs() {
    return cephfs;
  }


  public void setCephfs(V1alpha1ComponentSpecInstancesInnerVolumesInnerCephfs cephfs) {
    this.cephfs = cephfs;
  }


  public V1alpha1ComponentSpecInstancesInnerVolumesInner cinder(V1alpha1ComponentSpecInstancesInnerVolumesInnerCinder cinder) {
    
    this.cinder = cinder;
    return this;
  }

   /**
   * Get cinder
   * @return cinder
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ComponentSpecInstancesInnerVolumesInnerCinder getCinder() {
    return cinder;
  }


  public void setCinder(V1alpha1ComponentSpecInstancesInnerVolumesInnerCinder cinder) {
    this.cinder = cinder;
  }


  public V1alpha1ComponentSpecInstancesInnerVolumesInner configMap(V1alpha1ComponentSpecInstancesInnerVolumesInnerConfigMap configMap) {
    
    this.configMap = configMap;
    return this;
  }

   /**
   * Get configMap
   * @return configMap
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ComponentSpecInstancesInnerVolumesInnerConfigMap getConfigMap() {
    return configMap;
  }


  public void setConfigMap(V1alpha1ComponentSpecInstancesInnerVolumesInnerConfigMap configMap) {
    this.configMap = configMap;
  }


  public V1alpha1ComponentSpecInstancesInnerVolumesInner csi(V1alpha1ComponentSpecInstancesInnerVolumesInnerCsi csi) {
    
    this.csi = csi;
    return this;
  }

   /**
   * Get csi
   * @return csi
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ComponentSpecInstancesInnerVolumesInnerCsi getCsi() {
    return csi;
  }


  public void setCsi(V1alpha1ComponentSpecInstancesInnerVolumesInnerCsi csi) {
    this.csi = csi;
  }


  public V1alpha1ComponentSpecInstancesInnerVolumesInner downwardAPI(V1alpha1ComponentSpecInstancesInnerVolumesInnerDownwardAPI downwardAPI) {
    
    this.downwardAPI = downwardAPI;
    return this;
  }

   /**
   * Get downwardAPI
   * @return downwardAPI
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ComponentSpecInstancesInnerVolumesInnerDownwardAPI getDownwardAPI() {
    return downwardAPI;
  }


  public void setDownwardAPI(V1alpha1ComponentSpecInstancesInnerVolumesInnerDownwardAPI downwardAPI) {
    this.downwardAPI = downwardAPI;
  }


  public V1alpha1ComponentSpecInstancesInnerVolumesInner emptyDir(V1alpha1ComponentSpecInstancesInnerVolumesInnerEmptyDir emptyDir) {
    
    this.emptyDir = emptyDir;
    return this;
  }

   /**
   * Get emptyDir
   * @return emptyDir
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ComponentSpecInstancesInnerVolumesInnerEmptyDir getEmptyDir() {
    return emptyDir;
  }


  public void setEmptyDir(V1alpha1ComponentSpecInstancesInnerVolumesInnerEmptyDir emptyDir) {
    this.emptyDir = emptyDir;
  }


  public V1alpha1ComponentSpecInstancesInnerVolumesInner ephemeral(V1alpha1ComponentSpecInstancesInnerVolumesInnerEphemeral ephemeral) {
    
    this.ephemeral = ephemeral;
    return this;
  }

   /**
   * Get ephemeral
   * @return ephemeral
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ComponentSpecInstancesInnerVolumesInnerEphemeral getEphemeral() {
    return ephemeral;
  }


  public void setEphemeral(V1alpha1ComponentSpecInstancesInnerVolumesInnerEphemeral ephemeral) {
    this.ephemeral = ephemeral;
  }


  public V1alpha1ComponentSpecInstancesInnerVolumesInner fc(V1alpha1ComponentSpecInstancesInnerVolumesInnerFc fc) {
    
    this.fc = fc;
    return this;
  }

   /**
   * Get fc
   * @return fc
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ComponentSpecInstancesInnerVolumesInnerFc getFc() {
    return fc;
  }


  public void setFc(V1alpha1ComponentSpecInstancesInnerVolumesInnerFc fc) {
    this.fc = fc;
  }


  public V1alpha1ComponentSpecInstancesInnerVolumesInner flexVolume(V1alpha1ComponentSpecInstancesInnerVolumesInnerFlexVolume flexVolume) {
    
    this.flexVolume = flexVolume;
    return this;
  }

   /**
   * Get flexVolume
   * @return flexVolume
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ComponentSpecInstancesInnerVolumesInnerFlexVolume getFlexVolume() {
    return flexVolume;
  }


  public void setFlexVolume(V1alpha1ComponentSpecInstancesInnerVolumesInnerFlexVolume flexVolume) {
    this.flexVolume = flexVolume;
  }


  public V1alpha1ComponentSpecInstancesInnerVolumesInner flocker(V1alpha1ComponentSpecInstancesInnerVolumesInnerFlocker flocker) {
    
    this.flocker = flocker;
    return this;
  }

   /**
   * Get flocker
   * @return flocker
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ComponentSpecInstancesInnerVolumesInnerFlocker getFlocker() {
    return flocker;
  }


  public void setFlocker(V1alpha1ComponentSpecInstancesInnerVolumesInnerFlocker flocker) {
    this.flocker = flocker;
  }


  public V1alpha1ComponentSpecInstancesInnerVolumesInner gcePersistentDisk(V1alpha1ComponentSpecInstancesInnerVolumesInnerGcePersistentDisk gcePersistentDisk) {
    
    this.gcePersistentDisk = gcePersistentDisk;
    return this;
  }

   /**
   * Get gcePersistentDisk
   * @return gcePersistentDisk
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ComponentSpecInstancesInnerVolumesInnerGcePersistentDisk getGcePersistentDisk() {
    return gcePersistentDisk;
  }


  public void setGcePersistentDisk(V1alpha1ComponentSpecInstancesInnerVolumesInnerGcePersistentDisk gcePersistentDisk) {
    this.gcePersistentDisk = gcePersistentDisk;
  }


  public V1alpha1ComponentSpecInstancesInnerVolumesInner gitRepo(V1alpha1ComponentSpecInstancesInnerVolumesInnerGitRepo gitRepo) {
    
    this.gitRepo = gitRepo;
    return this;
  }

   /**
   * Get gitRepo
   * @return gitRepo
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ComponentSpecInstancesInnerVolumesInnerGitRepo getGitRepo() {
    return gitRepo;
  }


  public void setGitRepo(V1alpha1ComponentSpecInstancesInnerVolumesInnerGitRepo gitRepo) {
    this.gitRepo = gitRepo;
  }


  public V1alpha1ComponentSpecInstancesInnerVolumesInner glusterfs(V1alpha1ComponentSpecInstancesInnerVolumesInnerGlusterfs glusterfs) {
    
    this.glusterfs = glusterfs;
    return this;
  }

   /**
   * Get glusterfs
   * @return glusterfs
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ComponentSpecInstancesInnerVolumesInnerGlusterfs getGlusterfs() {
    return glusterfs;
  }


  public void setGlusterfs(V1alpha1ComponentSpecInstancesInnerVolumesInnerGlusterfs glusterfs) {
    this.glusterfs = glusterfs;
  }


  public V1alpha1ComponentSpecInstancesInnerVolumesInner hostPath(V1alpha1ComponentSpecInstancesInnerVolumesInnerHostPath hostPath) {
    
    this.hostPath = hostPath;
    return this;
  }

   /**
   * Get hostPath
   * @return hostPath
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ComponentSpecInstancesInnerVolumesInnerHostPath getHostPath() {
    return hostPath;
  }


  public void setHostPath(V1alpha1ComponentSpecInstancesInnerVolumesInnerHostPath hostPath) {
    this.hostPath = hostPath;
  }


  public V1alpha1ComponentSpecInstancesInnerVolumesInner iscsi(V1alpha1ComponentSpecInstancesInnerVolumesInnerIscsi iscsi) {
    
    this.iscsi = iscsi;
    return this;
  }

   /**
   * Get iscsi
   * @return iscsi
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ComponentSpecInstancesInnerVolumesInnerIscsi getIscsi() {
    return iscsi;
  }


  public void setIscsi(V1alpha1ComponentSpecInstancesInnerVolumesInnerIscsi iscsi) {
    this.iscsi = iscsi;
  }


  public V1alpha1ComponentSpecInstancesInnerVolumesInner name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * name of the volume. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   * @return name
  **/
  @jakarta.annotation.Nonnull
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public V1alpha1ComponentSpecInstancesInnerVolumesInner nfs(V1alpha1ComponentSpecInstancesInnerVolumesInnerNfs nfs) {
    
    this.nfs = nfs;
    return this;
  }

   /**
   * Get nfs
   * @return nfs
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ComponentSpecInstancesInnerVolumesInnerNfs getNfs() {
    return nfs;
  }


  public void setNfs(V1alpha1ComponentSpecInstancesInnerVolumesInnerNfs nfs) {
    this.nfs = nfs;
  }


  public V1alpha1ComponentSpecInstancesInnerVolumesInner persistentVolumeClaim(V1alpha1ComponentSpecInstancesInnerVolumesInnerPersistentVolumeClaim persistentVolumeClaim) {
    
    this.persistentVolumeClaim = persistentVolumeClaim;
    return this;
  }

   /**
   * Get persistentVolumeClaim
   * @return persistentVolumeClaim
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ComponentSpecInstancesInnerVolumesInnerPersistentVolumeClaim getPersistentVolumeClaim() {
    return persistentVolumeClaim;
  }


  public void setPersistentVolumeClaim(V1alpha1ComponentSpecInstancesInnerVolumesInnerPersistentVolumeClaim persistentVolumeClaim) {
    this.persistentVolumeClaim = persistentVolumeClaim;
  }


  public V1alpha1ComponentSpecInstancesInnerVolumesInner photonPersistentDisk(V1alpha1ComponentSpecInstancesInnerVolumesInnerPhotonPersistentDisk photonPersistentDisk) {
    
    this.photonPersistentDisk = photonPersistentDisk;
    return this;
  }

   /**
   * Get photonPersistentDisk
   * @return photonPersistentDisk
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ComponentSpecInstancesInnerVolumesInnerPhotonPersistentDisk getPhotonPersistentDisk() {
    return photonPersistentDisk;
  }


  public void setPhotonPersistentDisk(V1alpha1ComponentSpecInstancesInnerVolumesInnerPhotonPersistentDisk photonPersistentDisk) {
    this.photonPersistentDisk = photonPersistentDisk;
  }


  public V1alpha1ComponentSpecInstancesInnerVolumesInner portworxVolume(V1alpha1ComponentSpecInstancesInnerVolumesInnerPortworxVolume portworxVolume) {
    
    this.portworxVolume = portworxVolume;
    return this;
  }

   /**
   * Get portworxVolume
   * @return portworxVolume
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ComponentSpecInstancesInnerVolumesInnerPortworxVolume getPortworxVolume() {
    return portworxVolume;
  }


  public void setPortworxVolume(V1alpha1ComponentSpecInstancesInnerVolumesInnerPortworxVolume portworxVolume) {
    this.portworxVolume = portworxVolume;
  }


  public V1alpha1ComponentSpecInstancesInnerVolumesInner projected(V1alpha1ComponentSpecInstancesInnerVolumesInnerProjected projected) {
    
    this.projected = projected;
    return this;
  }

   /**
   * Get projected
   * @return projected
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ComponentSpecInstancesInnerVolumesInnerProjected getProjected() {
    return projected;
  }


  public void setProjected(V1alpha1ComponentSpecInstancesInnerVolumesInnerProjected projected) {
    this.projected = projected;
  }


  public V1alpha1ComponentSpecInstancesInnerVolumesInner quobyte(V1alpha1ComponentSpecInstancesInnerVolumesInnerQuobyte quobyte) {
    
    this.quobyte = quobyte;
    return this;
  }

   /**
   * Get quobyte
   * @return quobyte
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ComponentSpecInstancesInnerVolumesInnerQuobyte getQuobyte() {
    return quobyte;
  }


  public void setQuobyte(V1alpha1ComponentSpecInstancesInnerVolumesInnerQuobyte quobyte) {
    this.quobyte = quobyte;
  }


  public V1alpha1ComponentSpecInstancesInnerVolumesInner rbd(V1alpha1ComponentSpecInstancesInnerVolumesInnerRbd rbd) {
    
    this.rbd = rbd;
    return this;
  }

   /**
   * Get rbd
   * @return rbd
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ComponentSpecInstancesInnerVolumesInnerRbd getRbd() {
    return rbd;
  }


  public void setRbd(V1alpha1ComponentSpecInstancesInnerVolumesInnerRbd rbd) {
    this.rbd = rbd;
  }


  public V1alpha1ComponentSpecInstancesInnerVolumesInner scaleIO(V1alpha1ComponentSpecInstancesInnerVolumesInnerScaleIO scaleIO) {
    
    this.scaleIO = scaleIO;
    return this;
  }

   /**
   * Get scaleIO
   * @return scaleIO
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ComponentSpecInstancesInnerVolumesInnerScaleIO getScaleIO() {
    return scaleIO;
  }


  public void setScaleIO(V1alpha1ComponentSpecInstancesInnerVolumesInnerScaleIO scaleIO) {
    this.scaleIO = scaleIO;
  }


  public V1alpha1ComponentSpecInstancesInnerVolumesInner secret(V1alpha1ComponentSpecInstancesInnerVolumesInnerSecret secret) {
    
    this.secret = secret;
    return this;
  }

   /**
   * Get secret
   * @return secret
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ComponentSpecInstancesInnerVolumesInnerSecret getSecret() {
    return secret;
  }


  public void setSecret(V1alpha1ComponentSpecInstancesInnerVolumesInnerSecret secret) {
    this.secret = secret;
  }


  public V1alpha1ComponentSpecInstancesInnerVolumesInner storageos(V1alpha1ComponentSpecInstancesInnerVolumesInnerStorageos storageos) {
    
    this.storageos = storageos;
    return this;
  }

   /**
   * Get storageos
   * @return storageos
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ComponentSpecInstancesInnerVolumesInnerStorageos getStorageos() {
    return storageos;
  }


  public void setStorageos(V1alpha1ComponentSpecInstancesInnerVolumesInnerStorageos storageos) {
    this.storageos = storageos;
  }


  public V1alpha1ComponentSpecInstancesInnerVolumesInner vsphereVolume(V1alpha1ComponentSpecInstancesInnerVolumesInnerVsphereVolume vsphereVolume) {
    
    this.vsphereVolume = vsphereVolume;
    return this;
  }

   /**
   * Get vsphereVolume
   * @return vsphereVolume
  **/
  @jakarta.annotation.Nullable
  public V1alpha1ComponentSpecInstancesInnerVolumesInnerVsphereVolume getVsphereVolume() {
    return vsphereVolume;
  }


  public void setVsphereVolume(V1alpha1ComponentSpecInstancesInnerVolumesInnerVsphereVolume vsphereVolume) {
    this.vsphereVolume = vsphereVolume;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1ComponentSpecInstancesInnerVolumesInner v1alpha1ComponentSpecInstancesInnerVolumesInner = (V1alpha1ComponentSpecInstancesInnerVolumesInner) o;
    return Objects.equals(this.awsElasticBlockStore, v1alpha1ComponentSpecInstancesInnerVolumesInner.awsElasticBlockStore) &&
        Objects.equals(this.azureDisk, v1alpha1ComponentSpecInstancesInnerVolumesInner.azureDisk) &&
        Objects.equals(this.azureFile, v1alpha1ComponentSpecInstancesInnerVolumesInner.azureFile) &&
        Objects.equals(this.cephfs, v1alpha1ComponentSpecInstancesInnerVolumesInner.cephfs) &&
        Objects.equals(this.cinder, v1alpha1ComponentSpecInstancesInnerVolumesInner.cinder) &&
        Objects.equals(this.configMap, v1alpha1ComponentSpecInstancesInnerVolumesInner.configMap) &&
        Objects.equals(this.csi, v1alpha1ComponentSpecInstancesInnerVolumesInner.csi) &&
        Objects.equals(this.downwardAPI, v1alpha1ComponentSpecInstancesInnerVolumesInner.downwardAPI) &&
        Objects.equals(this.emptyDir, v1alpha1ComponentSpecInstancesInnerVolumesInner.emptyDir) &&
        Objects.equals(this.ephemeral, v1alpha1ComponentSpecInstancesInnerVolumesInner.ephemeral) &&
        Objects.equals(this.fc, v1alpha1ComponentSpecInstancesInnerVolumesInner.fc) &&
        Objects.equals(this.flexVolume, v1alpha1ComponentSpecInstancesInnerVolumesInner.flexVolume) &&
        Objects.equals(this.flocker, v1alpha1ComponentSpecInstancesInnerVolumesInner.flocker) &&
        Objects.equals(this.gcePersistentDisk, v1alpha1ComponentSpecInstancesInnerVolumesInner.gcePersistentDisk) &&
        Objects.equals(this.gitRepo, v1alpha1ComponentSpecInstancesInnerVolumesInner.gitRepo) &&
        Objects.equals(this.glusterfs, v1alpha1ComponentSpecInstancesInnerVolumesInner.glusterfs) &&
        Objects.equals(this.hostPath, v1alpha1ComponentSpecInstancesInnerVolumesInner.hostPath) &&
        Objects.equals(this.iscsi, v1alpha1ComponentSpecInstancesInnerVolumesInner.iscsi) &&
        Objects.equals(this.name, v1alpha1ComponentSpecInstancesInnerVolumesInner.name) &&
        Objects.equals(this.nfs, v1alpha1ComponentSpecInstancesInnerVolumesInner.nfs) &&
        Objects.equals(this.persistentVolumeClaim, v1alpha1ComponentSpecInstancesInnerVolumesInner.persistentVolumeClaim) &&
        Objects.equals(this.photonPersistentDisk, v1alpha1ComponentSpecInstancesInnerVolumesInner.photonPersistentDisk) &&
        Objects.equals(this.portworxVolume, v1alpha1ComponentSpecInstancesInnerVolumesInner.portworxVolume) &&
        Objects.equals(this.projected, v1alpha1ComponentSpecInstancesInnerVolumesInner.projected) &&
        Objects.equals(this.quobyte, v1alpha1ComponentSpecInstancesInnerVolumesInner.quobyte) &&
        Objects.equals(this.rbd, v1alpha1ComponentSpecInstancesInnerVolumesInner.rbd) &&
        Objects.equals(this.scaleIO, v1alpha1ComponentSpecInstancesInnerVolumesInner.scaleIO) &&
        Objects.equals(this.secret, v1alpha1ComponentSpecInstancesInnerVolumesInner.secret) &&
        Objects.equals(this.storageos, v1alpha1ComponentSpecInstancesInnerVolumesInner.storageos) &&
        Objects.equals(this.vsphereVolume, v1alpha1ComponentSpecInstancesInnerVolumesInner.vsphereVolume);
  }

  @Override
  public int hashCode() {
    return Objects.hash(awsElasticBlockStore, azureDisk, azureFile, cephfs, cinder, configMap, csi, downwardAPI, emptyDir, ephemeral, fc, flexVolume, flocker, gcePersistentDisk, gitRepo, glusterfs, hostPath, iscsi, name, nfs, persistentVolumeClaim, photonPersistentDisk, portworxVolume, projected, quobyte, rbd, scaleIO, secret, storageos, vsphereVolume);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1ComponentSpecInstancesInnerVolumesInner {\n");
    sb.append("    awsElasticBlockStore: ").append(toIndentedString(awsElasticBlockStore)).append("\n");
    sb.append("    azureDisk: ").append(toIndentedString(azureDisk)).append("\n");
    sb.append("    azureFile: ").append(toIndentedString(azureFile)).append("\n");
    sb.append("    cephfs: ").append(toIndentedString(cephfs)).append("\n");
    sb.append("    cinder: ").append(toIndentedString(cinder)).append("\n");
    sb.append("    configMap: ").append(toIndentedString(configMap)).append("\n");
    sb.append("    csi: ").append(toIndentedString(csi)).append("\n");
    sb.append("    downwardAPI: ").append(toIndentedString(downwardAPI)).append("\n");
    sb.append("    emptyDir: ").append(toIndentedString(emptyDir)).append("\n");
    sb.append("    ephemeral: ").append(toIndentedString(ephemeral)).append("\n");
    sb.append("    fc: ").append(toIndentedString(fc)).append("\n");
    sb.append("    flexVolume: ").append(toIndentedString(flexVolume)).append("\n");
    sb.append("    flocker: ").append(toIndentedString(flocker)).append("\n");
    sb.append("    gcePersistentDisk: ").append(toIndentedString(gcePersistentDisk)).append("\n");
    sb.append("    gitRepo: ").append(toIndentedString(gitRepo)).append("\n");
    sb.append("    glusterfs: ").append(toIndentedString(glusterfs)).append("\n");
    sb.append("    hostPath: ").append(toIndentedString(hostPath)).append("\n");
    sb.append("    iscsi: ").append(toIndentedString(iscsi)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nfs: ").append(toIndentedString(nfs)).append("\n");
    sb.append("    persistentVolumeClaim: ").append(toIndentedString(persistentVolumeClaim)).append("\n");
    sb.append("    photonPersistentDisk: ").append(toIndentedString(photonPersistentDisk)).append("\n");
    sb.append("    portworxVolume: ").append(toIndentedString(portworxVolume)).append("\n");
    sb.append("    projected: ").append(toIndentedString(projected)).append("\n");
    sb.append("    quobyte: ").append(toIndentedString(quobyte)).append("\n");
    sb.append("    rbd: ").append(toIndentedString(rbd)).append("\n");
    sb.append("    scaleIO: ").append(toIndentedString(scaleIO)).append("\n");
    sb.append("    secret: ").append(toIndentedString(secret)).append("\n");
    sb.append("    storageos: ").append(toIndentedString(storageos)).append("\n");
    sb.append("    vsphereVolume: ").append(toIndentedString(vsphereVolume)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("awsElasticBlockStore");
    openapiFields.add("azureDisk");
    openapiFields.add("azureFile");
    openapiFields.add("cephfs");
    openapiFields.add("cinder");
    openapiFields.add("configMap");
    openapiFields.add("csi");
    openapiFields.add("downwardAPI");
    openapiFields.add("emptyDir");
    openapiFields.add("ephemeral");
    openapiFields.add("fc");
    openapiFields.add("flexVolume");
    openapiFields.add("flocker");
    openapiFields.add("gcePersistentDisk");
    openapiFields.add("gitRepo");
    openapiFields.add("glusterfs");
    openapiFields.add("hostPath");
    openapiFields.add("iscsi");
    openapiFields.add("name");
    openapiFields.add("nfs");
    openapiFields.add("persistentVolumeClaim");
    openapiFields.add("photonPersistentDisk");
    openapiFields.add("portworxVolume");
    openapiFields.add("projected");
    openapiFields.add("quobyte");
    openapiFields.add("rbd");
    openapiFields.add("scaleIO");
    openapiFields.add("secret");
    openapiFields.add("storageos");
    openapiFields.add("vsphereVolume");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("name");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to V1alpha1ComponentSpecInstancesInnerVolumesInner
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!V1alpha1ComponentSpecInstancesInnerVolumesInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in V1alpha1ComponentSpecInstancesInnerVolumesInner is not found in the empty JSON string", V1alpha1ComponentSpecInstancesInnerVolumesInner.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!V1alpha1ComponentSpecInstancesInnerVolumesInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `V1alpha1ComponentSpecInstancesInnerVolumesInner` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : V1alpha1ComponentSpecInstancesInnerVolumesInner.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // validate the optional field `awsElasticBlockStore`
      if (jsonObj.get("awsElasticBlockStore") != null && !jsonObj.get("awsElasticBlockStore").isJsonNull()) {
        V1alpha1ComponentSpecInstancesInnerVolumesInnerAwsElasticBlockStore.validateJsonObject(jsonObj.getAsJsonObject("awsElasticBlockStore"));
      }
      // validate the optional field `azureDisk`
      if (jsonObj.get("azureDisk") != null && !jsonObj.get("azureDisk").isJsonNull()) {
        V1alpha1ComponentSpecInstancesInnerVolumesInnerAzureDisk.validateJsonObject(jsonObj.getAsJsonObject("azureDisk"));
      }
      // validate the optional field `azureFile`
      if (jsonObj.get("azureFile") != null && !jsonObj.get("azureFile").isJsonNull()) {
        V1alpha1ComponentSpecInstancesInnerVolumesInnerAzureFile.validateJsonObject(jsonObj.getAsJsonObject("azureFile"));
      }
      // validate the optional field `cephfs`
      if (jsonObj.get("cephfs") != null && !jsonObj.get("cephfs").isJsonNull()) {
        V1alpha1ComponentSpecInstancesInnerVolumesInnerCephfs.validateJsonObject(jsonObj.getAsJsonObject("cephfs"));
      }
      // validate the optional field `cinder`
      if (jsonObj.get("cinder") != null && !jsonObj.get("cinder").isJsonNull()) {
        V1alpha1ComponentSpecInstancesInnerVolumesInnerCinder.validateJsonObject(jsonObj.getAsJsonObject("cinder"));
      }
      // validate the optional field `configMap`
      if (jsonObj.get("configMap") != null && !jsonObj.get("configMap").isJsonNull()) {
        V1alpha1ComponentSpecInstancesInnerVolumesInnerConfigMap.validateJsonObject(jsonObj.getAsJsonObject("configMap"));
      }
      // validate the optional field `csi`
      if (jsonObj.get("csi") != null && !jsonObj.get("csi").isJsonNull()) {
        V1alpha1ComponentSpecInstancesInnerVolumesInnerCsi.validateJsonObject(jsonObj.getAsJsonObject("csi"));
      }
      // validate the optional field `downwardAPI`
      if (jsonObj.get("downwardAPI") != null && !jsonObj.get("downwardAPI").isJsonNull()) {
        V1alpha1ComponentSpecInstancesInnerVolumesInnerDownwardAPI.validateJsonObject(jsonObj.getAsJsonObject("downwardAPI"));
      }
      // validate the optional field `emptyDir`
      if (jsonObj.get("emptyDir") != null && !jsonObj.get("emptyDir").isJsonNull()) {
        V1alpha1ComponentSpecInstancesInnerVolumesInnerEmptyDir.validateJsonObject(jsonObj.getAsJsonObject("emptyDir"));
      }
      // validate the optional field `ephemeral`
      if (jsonObj.get("ephemeral") != null && !jsonObj.get("ephemeral").isJsonNull()) {
        V1alpha1ComponentSpecInstancesInnerVolumesInnerEphemeral.validateJsonObject(jsonObj.getAsJsonObject("ephemeral"));
      }
      // validate the optional field `fc`
      if (jsonObj.get("fc") != null && !jsonObj.get("fc").isJsonNull()) {
        V1alpha1ComponentSpecInstancesInnerVolumesInnerFc.validateJsonObject(jsonObj.getAsJsonObject("fc"));
      }
      // validate the optional field `flexVolume`
      if (jsonObj.get("flexVolume") != null && !jsonObj.get("flexVolume").isJsonNull()) {
        V1alpha1ComponentSpecInstancesInnerVolumesInnerFlexVolume.validateJsonObject(jsonObj.getAsJsonObject("flexVolume"));
      }
      // validate the optional field `flocker`
      if (jsonObj.get("flocker") != null && !jsonObj.get("flocker").isJsonNull()) {
        V1alpha1ComponentSpecInstancesInnerVolumesInnerFlocker.validateJsonObject(jsonObj.getAsJsonObject("flocker"));
      }
      // validate the optional field `gcePersistentDisk`
      if (jsonObj.get("gcePersistentDisk") != null && !jsonObj.get("gcePersistentDisk").isJsonNull()) {
        V1alpha1ComponentSpecInstancesInnerVolumesInnerGcePersistentDisk.validateJsonObject(jsonObj.getAsJsonObject("gcePersistentDisk"));
      }
      // validate the optional field `gitRepo`
      if (jsonObj.get("gitRepo") != null && !jsonObj.get("gitRepo").isJsonNull()) {
        V1alpha1ComponentSpecInstancesInnerVolumesInnerGitRepo.validateJsonObject(jsonObj.getAsJsonObject("gitRepo"));
      }
      // validate the optional field `glusterfs`
      if (jsonObj.get("glusterfs") != null && !jsonObj.get("glusterfs").isJsonNull()) {
        V1alpha1ComponentSpecInstancesInnerVolumesInnerGlusterfs.validateJsonObject(jsonObj.getAsJsonObject("glusterfs"));
      }
      // validate the optional field `hostPath`
      if (jsonObj.get("hostPath") != null && !jsonObj.get("hostPath").isJsonNull()) {
        V1alpha1ComponentSpecInstancesInnerVolumesInnerHostPath.validateJsonObject(jsonObj.getAsJsonObject("hostPath"));
      }
      // validate the optional field `iscsi`
      if (jsonObj.get("iscsi") != null && !jsonObj.get("iscsi").isJsonNull()) {
        V1alpha1ComponentSpecInstancesInnerVolumesInnerIscsi.validateJsonObject(jsonObj.getAsJsonObject("iscsi"));
      }
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `nfs`
      if (jsonObj.get("nfs") != null && !jsonObj.get("nfs").isJsonNull()) {
        V1alpha1ComponentSpecInstancesInnerVolumesInnerNfs.validateJsonObject(jsonObj.getAsJsonObject("nfs"));
      }
      // validate the optional field `persistentVolumeClaim`
      if (jsonObj.get("persistentVolumeClaim") != null && !jsonObj.get("persistentVolumeClaim").isJsonNull()) {
        V1alpha1ComponentSpecInstancesInnerVolumesInnerPersistentVolumeClaim.validateJsonObject(jsonObj.getAsJsonObject("persistentVolumeClaim"));
      }
      // validate the optional field `photonPersistentDisk`
      if (jsonObj.get("photonPersistentDisk") != null && !jsonObj.get("photonPersistentDisk").isJsonNull()) {
        V1alpha1ComponentSpecInstancesInnerVolumesInnerPhotonPersistentDisk.validateJsonObject(jsonObj.getAsJsonObject("photonPersistentDisk"));
      }
      // validate the optional field `portworxVolume`
      if (jsonObj.get("portworxVolume") != null && !jsonObj.get("portworxVolume").isJsonNull()) {
        V1alpha1ComponentSpecInstancesInnerVolumesInnerPortworxVolume.validateJsonObject(jsonObj.getAsJsonObject("portworxVolume"));
      }
      // validate the optional field `projected`
      if (jsonObj.get("projected") != null && !jsonObj.get("projected").isJsonNull()) {
        V1alpha1ComponentSpecInstancesInnerVolumesInnerProjected.validateJsonObject(jsonObj.getAsJsonObject("projected"));
      }
      // validate the optional field `quobyte`
      if (jsonObj.get("quobyte") != null && !jsonObj.get("quobyte").isJsonNull()) {
        V1alpha1ComponentSpecInstancesInnerVolumesInnerQuobyte.validateJsonObject(jsonObj.getAsJsonObject("quobyte"));
      }
      // validate the optional field `rbd`
      if (jsonObj.get("rbd") != null && !jsonObj.get("rbd").isJsonNull()) {
        V1alpha1ComponentSpecInstancesInnerVolumesInnerRbd.validateJsonObject(jsonObj.getAsJsonObject("rbd"));
      }
      // validate the optional field `scaleIO`
      if (jsonObj.get("scaleIO") != null && !jsonObj.get("scaleIO").isJsonNull()) {
        V1alpha1ComponentSpecInstancesInnerVolumesInnerScaleIO.validateJsonObject(jsonObj.getAsJsonObject("scaleIO"));
      }
      // validate the optional field `secret`
      if (jsonObj.get("secret") != null && !jsonObj.get("secret").isJsonNull()) {
        V1alpha1ComponentSpecInstancesInnerVolumesInnerSecret.validateJsonObject(jsonObj.getAsJsonObject("secret"));
      }
      // validate the optional field `storageos`
      if (jsonObj.get("storageos") != null && !jsonObj.get("storageos").isJsonNull()) {
        V1alpha1ComponentSpecInstancesInnerVolumesInnerStorageos.validateJsonObject(jsonObj.getAsJsonObject("storageos"));
      }
      // validate the optional field `vsphereVolume`
      if (jsonObj.get("vsphereVolume") != null && !jsonObj.get("vsphereVolume").isJsonNull()) {
        V1alpha1ComponentSpecInstancesInnerVolumesInnerVsphereVolume.validateJsonObject(jsonObj.getAsJsonObject("vsphereVolume"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V1alpha1ComponentSpecInstancesInnerVolumesInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V1alpha1ComponentSpecInstancesInnerVolumesInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V1alpha1ComponentSpecInstancesInnerVolumesInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V1alpha1ComponentSpecInstancesInnerVolumesInner.class));

       return (TypeAdapter<T>) new TypeAdapter<V1alpha1ComponentSpecInstancesInnerVolumesInner>() {
           @Override
           public void write(JsonWriter out, V1alpha1ComponentSpecInstancesInnerVolumesInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V1alpha1ComponentSpecInstancesInnerVolumesInner read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of V1alpha1ComponentSpecInstancesInnerVolumesInner given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of V1alpha1ComponentSpecInstancesInnerVolumesInner
  * @throws IOException if the JSON string is invalid with respect to V1alpha1ComponentSpecInstancesInnerVolumesInner
  */
  public static V1alpha1ComponentSpecInstancesInnerVolumesInner fromJson(String jsonString) throws IOException {
    return new JSON().getGson().fromJson(jsonString, V1alpha1ComponentSpecInstancesInnerVolumesInner.class);
  }

 /**
  * Convert an instance of V1alpha1ComponentSpecInstancesInnerVolumesInner to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return new JSON().getGson().toJson(this);
  }
}

