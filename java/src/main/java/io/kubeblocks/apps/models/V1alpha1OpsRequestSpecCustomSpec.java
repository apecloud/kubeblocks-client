/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.27.4
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kubeblocks.apps.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.kubernetes.client.openapi.JSON;

/**
 * V1alpha1OpsRequestSpecCustomSpec
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-01-31T10:01:20.252122Z[Etc/UTC]")
public class V1alpha1OpsRequestSpecCustomSpec {
  public static final String SERIALIZED_NAME_COMPONENT_NAME = "componentName";
  @SerializedName(SERIALIZED_NAME_COMPONENT_NAME)
  private String componentName;

  public static final String SERIALIZED_NAME_OPS_DEFINITION_REF = "opsDefinitionRef";
  @SerializedName(SERIALIZED_NAME_OPS_DEFINITION_REF)
  private String opsDefinitionRef;

  public static final String SERIALIZED_NAME_PARAMS = "params";
  @SerializedName(SERIALIZED_NAME_PARAMS)
  private List<Map<String, String>> params;

  public V1alpha1OpsRequestSpecCustomSpec() {
  }

  public V1alpha1OpsRequestSpecCustomSpec componentName(String componentName) {
    
    this.componentName = componentName;
    return this;
  }

   /**
   * cluster component name.
   * @return componentName
  **/
  @jakarta.annotation.Nonnull
  public String getComponentName() {
    return componentName;
  }


  public void setComponentName(String componentName) {
    this.componentName = componentName;
  }


  public V1alpha1OpsRequestSpecCustomSpec opsDefinitionRef(String opsDefinitionRef) {
    
    this.opsDefinitionRef = opsDefinitionRef;
    return this;
  }

   /**
   * reference a opsDefinition
   * @return opsDefinitionRef
  **/
  @jakarta.annotation.Nonnull
  public String getOpsDefinitionRef() {
    return opsDefinitionRef;
  }


  public void setOpsDefinitionRef(String opsDefinitionRef) {
    this.opsDefinitionRef = opsDefinitionRef;
  }


  public V1alpha1OpsRequestSpecCustomSpec params(List<Map<String, String>> params) {
    
    this.params = params;
    return this;
  }

  public V1alpha1OpsRequestSpecCustomSpec addParamsItem(Map<String, String> paramsItem) {
    if (this.params == null) {
      this.params = new ArrayList<>();
    }
    this.params.add(paramsItem);
    return this;
  }

   /**
   * the input for this operation declared in the opsDefinition.spec.parametersSchema. will create corresponding jobs for each array element. if the param type is array, the format must be \&quot;v1,v2,v3\&quot;.
   * @return params
  **/
  @jakarta.annotation.Nullable
  public List<Map<String, String>> getParams() {
    return params;
  }


  public void setParams(List<Map<String, String>> params) {
    this.params = params;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1OpsRequestSpecCustomSpec v1alpha1OpsRequestSpecCustomSpec = (V1alpha1OpsRequestSpecCustomSpec) o;
    return Objects.equals(this.componentName, v1alpha1OpsRequestSpecCustomSpec.componentName) &&
        Objects.equals(this.opsDefinitionRef, v1alpha1OpsRequestSpecCustomSpec.opsDefinitionRef) &&
        Objects.equals(this.params, v1alpha1OpsRequestSpecCustomSpec.params);
  }

  @Override
  public int hashCode() {
    return Objects.hash(componentName, opsDefinitionRef, params);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1OpsRequestSpecCustomSpec {\n");
    sb.append("    componentName: ").append(toIndentedString(componentName)).append("\n");
    sb.append("    opsDefinitionRef: ").append(toIndentedString(opsDefinitionRef)).append("\n");
    sb.append("    params: ").append(toIndentedString(params)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("componentName");
    openapiFields.add("opsDefinitionRef");
    openapiFields.add("params");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("componentName");
    openapiRequiredFields.add("opsDefinitionRef");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to V1alpha1OpsRequestSpecCustomSpec
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!V1alpha1OpsRequestSpecCustomSpec.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in V1alpha1OpsRequestSpecCustomSpec is not found in the empty JSON string", V1alpha1OpsRequestSpecCustomSpec.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!V1alpha1OpsRequestSpecCustomSpec.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `V1alpha1OpsRequestSpecCustomSpec` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : V1alpha1OpsRequestSpecCustomSpec.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("componentName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `componentName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("componentName").toString()));
      }
      if (!jsonObj.get("opsDefinitionRef").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `opsDefinitionRef` to be a primitive type in the JSON string but got `%s`", jsonObj.get("opsDefinitionRef").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("params") != null && !jsonObj.get("params").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `params` to be an array in the JSON string but got `%s`", jsonObj.get("params").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V1alpha1OpsRequestSpecCustomSpec.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V1alpha1OpsRequestSpecCustomSpec' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V1alpha1OpsRequestSpecCustomSpec> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V1alpha1OpsRequestSpecCustomSpec.class));

       return (TypeAdapter<T>) new TypeAdapter<V1alpha1OpsRequestSpecCustomSpec>() {
           @Override
           public void write(JsonWriter out, V1alpha1OpsRequestSpecCustomSpec value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V1alpha1OpsRequestSpecCustomSpec read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of V1alpha1OpsRequestSpecCustomSpec given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of V1alpha1OpsRequestSpecCustomSpec
  * @throws IOException if the JSON string is invalid with respect to V1alpha1OpsRequestSpecCustomSpec
  */
  public static V1alpha1OpsRequestSpecCustomSpec fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, V1alpha1OpsRequestSpecCustomSpec.class);
  }

 /**
  * Convert an instance of V1alpha1OpsRequestSpecCustomSpec to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

