/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.21.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kubeblocks.apps.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.kubeblocks.apps.models.V1alpha1OpsRequestSpecReconfigureConfigurations;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Reconfigure defines the variables that need to input when updating configuration.
 */
@ApiModel(description = "Reconfigure defines the variables that need to input when updating configuration.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-02-01T05:38:56.141Z[Etc/UTC]")
public class V1alpha1OpsRequestSpecReconfigures {
  public static final String SERIALIZED_NAME_COMPONENT_NAME = "componentName";
  @SerializedName(SERIALIZED_NAME_COMPONENT_NAME)
  private String componentName;

  public static final String SERIALIZED_NAME_CONFIGURATIONS = "configurations";
  @SerializedName(SERIALIZED_NAME_CONFIGURATIONS)
  private List<V1alpha1OpsRequestSpecReconfigureConfigurations> configurations = new ArrayList<>();


  public V1alpha1OpsRequestSpecReconfigures componentName(String componentName) {
    
    this.componentName = componentName;
    return this;
  }

   /**
   * componentName cluster component name.
   * @return componentName
  **/
  @ApiModelProperty(required = true, value = "componentName cluster component name.")

  public String getComponentName() {
    return componentName;
  }


  public void setComponentName(String componentName) {
    this.componentName = componentName;
  }


  public V1alpha1OpsRequestSpecReconfigures configurations(List<V1alpha1OpsRequestSpecReconfigureConfigurations> configurations) {
    
    this.configurations = configurations;
    return this;
  }

  public V1alpha1OpsRequestSpecReconfigures addConfigurationsItem(V1alpha1OpsRequestSpecReconfigureConfigurations configurationsItem) {
    this.configurations.add(configurationsItem);
    return this;
  }

   /**
   * configurations defines which components perform the operation.
   * @return configurations
  **/
  @ApiModelProperty(required = true, value = "configurations defines which components perform the operation.")

  public List<V1alpha1OpsRequestSpecReconfigureConfigurations> getConfigurations() {
    return configurations;
  }


  public void setConfigurations(List<V1alpha1OpsRequestSpecReconfigureConfigurations> configurations) {
    this.configurations = configurations;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1OpsRequestSpecReconfigures v1alpha1OpsRequestSpecReconfigures = (V1alpha1OpsRequestSpecReconfigures) o;
    return Objects.equals(this.componentName, v1alpha1OpsRequestSpecReconfigures.componentName) &&
        Objects.equals(this.configurations, v1alpha1OpsRequestSpecReconfigures.configurations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(componentName, configurations);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1OpsRequestSpecReconfigures {\n");
    sb.append("    componentName: ").append(toIndentedString(componentName)).append("\n");
    sb.append("    configurations: ").append(toIndentedString(configurations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

