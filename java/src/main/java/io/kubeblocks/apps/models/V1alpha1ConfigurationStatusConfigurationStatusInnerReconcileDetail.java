/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.25.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kubeblocks.apps.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import io.kubernetes.client.openapi.JSON;

/**
 * Provides detailed information about the execution of the configuration change. This field is optional.
 */
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-08-05T13:57:39.807735Z[Etc/UTC]")
public class V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail {
  public static final String SERIALIZED_NAME_CURRENT_REVISION = "currentRevision";
  @SerializedName(SERIALIZED_NAME_CURRENT_REVISION)
  private String currentRevision;

  public static final String SERIALIZED_NAME_ERR_MESSAGE = "errMessage";
  @SerializedName(SERIALIZED_NAME_ERR_MESSAGE)
  private String errMessage;

  public static final String SERIALIZED_NAME_EXEC_RESULT = "execResult";
  @SerializedName(SERIALIZED_NAME_EXEC_RESULT)
  private String execResult;

  public static final String SERIALIZED_NAME_EXPECTED_COUNT = "expectedCount";
  @SerializedName(SERIALIZED_NAME_EXPECTED_COUNT)
  private Integer expectedCount;

  public static final String SERIALIZED_NAME_POLICY = "policy";
  @SerializedName(SERIALIZED_NAME_POLICY)
  private String policy;

  public static final String SERIALIZED_NAME_SUCCEED_COUNT = "succeedCount";
  @SerializedName(SERIALIZED_NAME_SUCCEED_COUNT)
  private Integer succeedCount;

  public V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail() {
  }

  public V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail currentRevision(String currentRevision) {
    
    this.currentRevision = currentRevision;
    return this;
  }

   /**
   * Represents the current revision of the configuration item.
   * @return currentRevision
  **/
  @jakarta.annotation.Nullable
  public String getCurrentRevision() {
    return currentRevision;
  }


  public void setCurrentRevision(String currentRevision) {
    this.currentRevision = currentRevision;
  }


  public V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail errMessage(String errMessage) {
    
    this.errMessage = errMessage;
    return this;
  }

   /**
   * Represents the error message generated when the execution of configuration changes fails.
   * @return errMessage
  **/
  @jakarta.annotation.Nullable
  public String getErrMessage() {
    return errMessage;
  }


  public void setErrMessage(String errMessage) {
    this.errMessage = errMessage;
  }


  public V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail execResult(String execResult) {
    
    this.execResult = execResult;
    return this;
  }

   /**
   * Represents the outcome of the most recent execution.
   * @return execResult
  **/
  @jakarta.annotation.Nullable
  public String getExecResult() {
    return execResult;
  }


  public void setExecResult(String execResult) {
    this.execResult = execResult;
  }


  public V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail expectedCount(Integer expectedCount) {
    
    this.expectedCount = expectedCount;
    return this;
  }

   /**
   * Represents the total number of pods that require execution of configuration changes.
   * @return expectedCount
  **/
  @jakarta.annotation.Nullable
  public Integer getExpectedCount() {
    return expectedCount;
  }


  public void setExpectedCount(Integer expectedCount) {
    this.expectedCount = expectedCount;
  }


  public V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail policy(String policy) {
    
    this.policy = policy;
    return this;
  }

   /**
   * Represents the policy applied during the most recent execution.
   * @return policy
  **/
  @jakarta.annotation.Nullable
  public String getPolicy() {
    return policy;
  }


  public void setPolicy(String policy) {
    this.policy = policy;
  }


  public V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail succeedCount(Integer succeedCount) {
    
    this.succeedCount = succeedCount;
    return this;
  }

   /**
   * Represents the number of pods where configuration changes were successfully applied.
   * @return succeedCount
  **/
  @jakarta.annotation.Nullable
  public Integer getSucceedCount() {
    return succeedCount;
  }


  public void setSucceedCount(Integer succeedCount) {
    this.succeedCount = succeedCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail v1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail = (V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail) o;
    return Objects.equals(this.currentRevision, v1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail.currentRevision) &&
        Objects.equals(this.errMessage, v1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail.errMessage) &&
        Objects.equals(this.execResult, v1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail.execResult) &&
        Objects.equals(this.expectedCount, v1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail.expectedCount) &&
        Objects.equals(this.policy, v1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail.policy) &&
        Objects.equals(this.succeedCount, v1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail.succeedCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currentRevision, errMessage, execResult, expectedCount, policy, succeedCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail {\n");
    sb.append("    currentRevision: ").append(toIndentedString(currentRevision)).append("\n");
    sb.append("    errMessage: ").append(toIndentedString(errMessage)).append("\n");
    sb.append("    execResult: ").append(toIndentedString(execResult)).append("\n");
    sb.append("    expectedCount: ").append(toIndentedString(expectedCount)).append("\n");
    sb.append("    policy: ").append(toIndentedString(policy)).append("\n");
    sb.append("    succeedCount: ").append(toIndentedString(succeedCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("currentRevision");
    openapiFields.add("errMessage");
    openapiFields.add("execResult");
    openapiFields.add("expectedCount");
    openapiFields.add("policy");
    openapiFields.add("succeedCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail is not found in the empty JSON string", V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("currentRevision") != null && !jsonObj.get("currentRevision").isJsonNull()) && !jsonObj.get("currentRevision").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currentRevision` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currentRevision").toString()));
      }
      if ((jsonObj.get("errMessage") != null && !jsonObj.get("errMessage").isJsonNull()) && !jsonObj.get("errMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `errMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("errMessage").toString()));
      }
      if ((jsonObj.get("execResult") != null && !jsonObj.get("execResult").isJsonNull()) && !jsonObj.get("execResult").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `execResult` to be a primitive type in the JSON string but got `%s`", jsonObj.get("execResult").toString()));
      }
      if ((jsonObj.get("policy") != null && !jsonObj.get("policy").isJsonNull()) && !jsonObj.get("policy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `policy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("policy").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail>() {
           @Override
           public void write(JsonWriter out, V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail
  * @throws IOException if the JSON string is invalid with respect to V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail
  */
  public static V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail fromJson(String jsonString) throws IOException {
    return new JSON().getGson().fromJson(jsonString, V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail.class);
  }

 /**
  * Convert an instance of V1alpha1ConfigurationStatusConfigurationStatusInnerReconcileDetail to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return new JSON().getGson().toJson(this);
  }
}

